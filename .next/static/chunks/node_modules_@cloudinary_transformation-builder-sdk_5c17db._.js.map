{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/internal/utils/unsupportedError.js"],"sourcesContent":["class UnsupportedError extends Error {\n    constructor(message = 'Unsupported') {\n        super(message);\n    }\n}\n/**\n * Creates a new UnsupportedError\n * @param message\n */\nfunction createUnsupportedError(message) {\n    return new UnsupportedError(message);\n}\nexport { UnsupportedError, createUnsupportedError };\n"],"names":[],"mappings":";;;;AAAA,MAAM,yBAAyB;IAC3B,YAAY,UAAU,aAAa,CAAE;QACjC,KAAK,CAAC;IACV;AACJ;AACA;;;CAGC,GACD,SAAS,uBAAuB,OAAO;IACnC,OAAO,IAAI,iBAAiB;AAChC","ignoreList":[0]}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/internal/RawAction.js"],"sourcesContent":["import { createUnsupportedError } from \"./utils/unsupportedError.js\";\n/**\n * @summary SDK\n * @memberOf SDK\n * @description Defines an action that's a string literal, no validations or manipulations are performed\n */\nclass RawAction {\n    constructor(raw) {\n        this.raw = raw;\n    }\n    toString() {\n        return this.raw;\n    }\n    toJson() {\n        return { error: createUnsupportedError(`unsupported action ${this.constructor.name}`) };\n    }\n}\nexport { RawAction };\n"],"names":[],"mappings":";;;AAAA;;AACA;;;;CAIC,GACD,MAAM;IACF,YAAY,GAAG,CAAE;QACb,IAAI,CAAC,GAAG,GAAG;IACf;IACA,WAAW;QACP,OAAO,IAAI,CAAC,GAAG;IACnB;IACA,SAAS;QACL,OAAO;YAAE,OAAO,CAAA,GAAA,4MAAA,CAAA,yBAAsB,AAAD,EAAE,CAAC,mBAAmB,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE;QAAE;IAC1F;AACJ","ignoreList":[0]}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/internal/qualifier/QualifierValue.js"],"sourcesContent":["/**\n * @summary SDK\n * @memberOf SDK\n */\nclass QualifierValue {\n    /**\n     *\n     * @param {QualifierValue | QualifierValue[] | any[] | string | number}qualifierValue\n     */\n    constructor(qualifierValue) {\n        this.values = [];\n        this.delimiter = ':'; // {value}{delimiter}{value}...\n        if (this.hasValue(qualifierValue)) {\n            this.addValue(qualifierValue);\n        }\n    }\n    /**\n     * @description Joins the provided values with the provided delimiter\n     */\n    toString() {\n        return this.values.join(this.delimiter);\n    }\n    /**\n     * @description Checks if the provided argument has a value\n     * @param {any} v\n     * @private\n     * @return {boolean}\n     */\n    hasValue(v) {\n        return typeof v !== 'undefined' && v !== null && v !== '';\n    }\n    /**\n     * @desc Adds a value for the this qualifier instance\n     * @param {any} value\n     * @return {this}\n     */\n    addValue(value) {\n        // Append value or array of values\n        if (Array.isArray(value)) {\n            this.values = this.values.concat(value);\n        }\n        else {\n            this.values.push(value);\n        }\n        // Remove falsy values\n        this.values = this.values.filter((v) => this.hasValue(v));\n        return this;\n    }\n    /**\n     * @description Sets the delimiter for this instance\n     * @param delimiter\n     */\n    setDelimiter(delimiter) {\n        this.delimiter = delimiter;\n        return this;\n    }\n}\nexport { QualifierValue };\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AACD,MAAM;IACF;;;KAGC,GACD,YAAY,cAAc,CAAE;QACxB,IAAI,CAAC,MAAM,GAAG,EAAE;QAChB,IAAI,CAAC,SAAS,GAAG,KAAK,+BAA+B;QACrD,IAAI,IAAI,CAAC,QAAQ,CAAC,iBAAiB;YAC/B,IAAI,CAAC,QAAQ,CAAC;QAClB;IACJ;IACA;;KAEC,GACD,WAAW;QACP,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS;IAC1C;IACA;;;;;KAKC,GACD,SAAS,CAAC,EAAE;QACR,OAAO,OAAO,MAAM,eAAe,MAAM,QAAQ,MAAM;IAC3D;IACA;;;;KAIC,GACD,SAAS,KAAK,EAAE;QACZ,kCAAkC;QAClC,IAAI,MAAM,OAAO,CAAC,QAAQ;YACtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;QACrC,OACK;YACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;QACrB;QACA,sBAAsB;QACtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAM,IAAI,CAAC,QAAQ,CAAC;QACtD,OAAO,IAAI;IACf;IACA;;;KAGC,GACD,aAAa,SAAS,EAAE;QACpB,IAAI,CAAC,SAAS,GAAG;QACjB,OAAO,IAAI;IACf;AACJ","ignoreList":[0]}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/internal/models/qualifierToJson.js"],"sourcesContent":["import { createUnsupportedError } from \"../utils/unsupportedError.js\";\n/**\n * Returns the action's model\n */\nexport function qualifierToJson() {\n    return this._qualifierModel || { error: createUnsupportedError(`unsupported qualifier ${this.constructor.name}`) };\n}\n"],"names":[],"mappings":";;;AAAA;;AAIO,SAAS;IACZ,OAAO,IAAI,CAAC,eAAe,IAAI;QAAE,OAAO,CAAA,GAAA,4MAAA,CAAA,yBAAsB,AAAD,EAAE,CAAC,sBAAsB,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE;IAAE;AACrH","ignoreList":[0]}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/internal/models/QualifierModel.js"],"sourcesContent":["import { qualifierToJson } from \"./qualifierToJson.js\";\nexport class QualifierModel {\n    constructor() {\n        this._qualifierModel = {};\n    }\n    toJson() {\n        return qualifierToJson.apply(this);\n    }\n}\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM;IACT,aAAc;QACV,IAAI,CAAC,eAAe,GAAG,CAAC;IAC5B;IACA,SAAS;QACL,OAAO,4MAAA,CAAA,kBAAe,CAAC,KAAK,CAAC,IAAI;IACrC;AACJ","ignoreList":[0]}},
    {"offset": {"line": 147, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 153, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/internal/qualifier/Qualifier.js"],"sourcesContent":["import { QualifierValue } from './QualifierValue.js';\nimport { QualifierModel } from '../models/QualifierModel.js';\n/**\n * @summary SDK\n * @memberOf SDK\n */\nclass Qualifier extends QualifierModel {\n    constructor(key, qualifierValue) {\n        super();\n        this.delimiter = '_'; // {key}{delimiter}{qualifierValue}\n        this.key = key;\n        if (qualifierValue instanceof QualifierValue) {\n            this.qualifierValue = qualifierValue;\n        }\n        else {\n            this.qualifierValue = new QualifierValue();\n            this.qualifierValue.addValue(qualifierValue);\n        }\n    }\n    toString() {\n        const { key, delimiter, qualifierValue } = this;\n        return `${key}${delimiter}${qualifierValue.toString()}`;\n    }\n    addValue(value) {\n        this.qualifierValue.addValue(value);\n        return this;\n    }\n}\nexport { Qualifier };\n"],"names":[],"mappings":";;;AAAA;AACA;;;AACA;;;CAGC,GACD,MAAM,kBAAkB,2MAAA,CAAA,iBAAc;IAClC,YAAY,GAAG,EAAE,cAAc,CAAE;QAC7B,KAAK;QACL,IAAI,CAAC,SAAS,GAAG,KAAK,mCAAmC;QACzD,IAAI,CAAC,GAAG,GAAG;QACX,IAAI,0BAA0B,8MAAA,CAAA,iBAAc,EAAE;YAC1C,IAAI,CAAC,cAAc,GAAG;QAC1B,OACK;YACD,IAAI,CAAC,cAAc,GAAG,IAAI,8MAAA,CAAA,iBAAc;YACxC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;QACjC;IACJ;IACA,WAAW;QACP,MAAM,EAAE,GAAG,EAAE,SAAS,EAAE,cAAc,EAAE,GAAG,IAAI;QAC/C,OAAO,GAAG,MAAM,YAAY,eAAe,QAAQ,IAAI;IAC3D;IACA,SAAS,KAAK,EAAE;QACZ,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;QAC7B,OAAO,IAAI;IACf;AACJ","ignoreList":[0]}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/qualifiers/flag/FlagQualifier.js"],"sourcesContent":["import { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\n/**\n * @memberOf Qualifiers.Flag\n * @extends {SDK.Qualifier}\n * @description the FlagQualifier class\n */\nclass FlagQualifier extends Qualifier {\n    constructor(flagType, flagValue) {\n        let qualifierValue;\n        if (flagValue) {\n            qualifierValue = new QualifierValue([flagType, `${flagValue}`]).setDelimiter(':');\n        }\n        else {\n            qualifierValue = flagType;\n        }\n        super('fl', qualifierValue);\n        this.flagValue = flagValue;\n    }\n    toString() {\n        return super.toString().replace(/\\./g, '%2E');\n    }\n    getFlagValue() {\n        return this.flagValue;\n    }\n}\nexport { FlagQualifier };\n"],"names":[],"mappings":";;;AAAA;AACA;;;AACA;;;;CAIC,GACD,MAAM,sBAAsB,yMAAA,CAAA,YAAS;IACjC,YAAY,QAAQ,EAAE,SAAS,CAAE;QAC7B,IAAI;QACJ,IAAI,WAAW;YACX,iBAAiB,IAAI,8MAAA,CAAA,iBAAc,CAAC;gBAAC;gBAAU,GAAG,WAAW;aAAC,EAAE,YAAY,CAAC;QACjF,OACK;YACD,iBAAiB;QACrB;QACA,KAAK,CAAC,MAAM;QACZ,IAAI,CAAC,SAAS,GAAG;IACrB;IACA,WAAW;QACP,OAAO,KAAK,CAAC,WAAW,OAAO,CAAC,OAAO;IAC3C;IACA,eAAe;QACX,OAAO,IAAI,CAAC,SAAS;IACzB;AACJ","ignoreList":[0]}},
    {"offset": {"line": 224, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 230, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/qualifiers/flag.js"],"sourcesContent":["/**\n * @description Defines flags that you can use to alter the default transformation behavior.\n * @namespace Flag\n * @memberOf Qualifiers\n */\nimport { FlagQualifier } from \"./flag/FlagQualifier.js\";\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Used when delivering a video file as an image format that supports animation, such as animated WebP.\n * Plays all frames rather than just delivering the first one as a static image.\n * Use this flag in addition to the flag or parameter controlling the delivery format,\n * for example f_auto or fl_awebp.\n\n * Note: When delivering a video in GIF format, it is delivered as an animated GIF by default and this flag is not\n * necessary. To deliver a single frame of a video in GIF format, use the page parameter.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction animated() {\n    return new FlagQualifier('animated');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description When converting animated images to WebP format, generate an animated WebP from all the frames in the\n * original\n * animated file instead of only from the first still frame.\n *\n * Note that animated WebPs are not supported in all browsers and versions.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction animatedWebP() {\n    return new FlagQualifier('awebp');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description When used together with automatic quality (q_auto):\n * allow switching to PNG8 encoding if the quality algorithm decides that it's more efficient.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction anyFormat() {\n    return new FlagQualifier('any_format');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description When converting animated images to PNG format, generates an animated PNG from all the frames in the\n * original\n * animated file instead of only from the first still frame.\n *\n * Note that animated PNGs are not supported in all browsers and versions.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction animatedPng() {\n    return new FlagQualifier('apng');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Trims pixels according to a clipping path included in the original image\n * (e.g., manually created using PhotoShop).\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction clip() {\n    return new FlagQualifier('clip');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Trims pixels according to a clipping path included in the original image (e.g., manually created\n * using PhotoShop)\n * using an evenodd clipping rule.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction clipEvenOdd() {\n    return new FlagQualifier('clip_evenodd');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Instructs Cloudinary to clear all image meta-data (IPTC, Exif and XMP) while applying an incoming\n * transformation.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction forceStrip() {\n    return new FlagQualifier('force_strip');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Allows custom flag\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction custom(value) {\n    return new FlagQualifier(value);\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Adds ICC color space metadata to the image, even when the original image doesn't contain any ICC data.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction forceIcc() {\n    return new FlagQualifier('force_icc');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Delivers the image as an attachment.\n * @param {string} filename The attachment's filename\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction attachment(filename) {\n    return new FlagQualifier('attachment', filename);\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Returns metadata of the input asset and of the transformed output asset in JSON instead of the\n * transformed image.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction getInfo() {\n    return new FlagQualifier('getinfo');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Deliver an HLS adaptive bitrate streaming file as HLS v3 instead of the default version (HLS v4).\n * Delivering in this format requires a private CDN configuration.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction hlsv3() {\n    return new FlagQualifier('hlsv3');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Sets the cache-control to immutable for the asset.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction immutableCache() {\n    return new FlagQualifier('immutable_cache');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description * Allows specifying only either width or height so the value of the second axis remains as is, and is not\n * recalculated to maintain the aspect ratio of the original image.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction ignoreInitialAspectRatio() {\n    return new FlagQualifier('ignore_aspect_ratio');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Keeps the copyright related fields when stripping meta-data.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction keepAttribution() {\n    return new FlagQualifier('keep_attribution');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * Keep the Display Aspect Ratio metadata of the uploaded video (if it’s different from the current video\n * dimensions).\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction keepDar() {\n    return new FlagQualifier('keep_dar');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Keeps all meta-data.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction keepIptc() {\n    return new FlagQualifier('keep_iptc');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Applies all chained transformations, until a transformation component that includes this flag, on the last added\n * overlay or underlay instead of applying on the containing image.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction layerApply() {\n    return new FlagQualifier('layer_apply');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Automatically use lossy compression when delivering animated GIF files.\n *\n * This flag can also be used as a conditional flag for delivering PNG files: it tells Cloudinary to deliver the\n * image in PNG format (as requested) unless there is no transparency channel - in which case deliver in JPEG\n * format.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction lossy() {\n    return new FlagQualifier('lossy');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Convert the audio channel to mono\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction mono() {\n    return new FlagQualifier('mono');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Used internally by Position within an Overlay, this flag will tile the overlay across your image.\n *\n * <b>Learn more:</b> {@link https://cloudinary.com/documentation/transformation_reference#fl_no_overflow|Overflow in overlays}\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction noOverflow() {\n    return new FlagQualifier('no_overflow');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Don't stream a video that is currently being generated on the fly. Wait until the video is fully generated.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction noStream() {\n    return new FlagQualifier('no_stream');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Generate PNG images in the png24 format.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction png24() {\n    return new FlagQualifier('png24');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Generate PNG images in the png32 format.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction png32() {\n    return new FlagQualifier('png32');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Generate PNG images in the PNG8 format.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction png8() {\n    return new FlagQualifier('png8');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description When used with automatic fetch_format (f_auto): ensures that images with a transparency channel will be\n * delivered in PNG format.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction preserveTransparency() {\n    return new FlagQualifier('preserve_transparency');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Generates a JPG image using the progressive (interlaced) JPG format.\n *\n * This format allows the browser to quickly show a low-quality rendering of the image until the full-quality\n * image is loaded.\n *\n * @param {string} mode? The mode to determine a specific progressive outcome as follows:\n * * semi - A smart optimization of the decoding time, compression level and progressive rendering\n *          (less iterations). This is the default mode when using q_auto.\n * * steep - Delivers a preview very quickly, and in a single later phase improves the image to\n *           the required resolution.\n * * none  - Use this to deliver a non-progressive image. This is the default mode when setting\n *           a specific value for quality.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction progressive(mode) {\n    return new FlagQualifier('progressive', mode);\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Modifies percentage-based width & height parameters of overlays and underlays (e.g., 1.0) to be relative to the overlaid region\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction regionRelative() {\n    return new FlagQualifier('region_relative');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Reduces the image to one flat pixelated layer (as opposed to the default vector based graphic) in\n * order to enable\n * PDF resizing and overlay manipulations.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction rasterize() {\n    return new FlagQualifier('rasterize');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Modifies percentage-based width & height parameters of overlays and underlays (e.g., 1.0) to be relative to the containing image instead of the added layer.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction relative() {\n    return new FlagQualifier('relative');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Instructs Cloudinary to run a sanitizer on the image (relevant only for the SVG format).\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction sanitize() {\n    return new FlagQualifier('sanitize');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Splices the video stipulated as an overlay on to the end of the container video instead of adding it as an\n * overlay.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction splice() {\n    return new FlagQualifier('splice');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Instructs Cloudinary to clear all ICC color profile data included with the image.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction stripProfile() {\n    return new FlagQualifier('strip_profile');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description If the requested video transformation has already been generated, this flag works identically to\n * Flag::attachment.\n *\n *  However, if the video transformation is being requested for the first time, this flag causes the video download\n * to begin immediately, streaming it as a fragmented video file.\n *\n * In contrast, if the regular fl_attachment flag is used when a user requests a new video transformation,\n * the download will begin only after the complete transformed video has been generated.\n *\n * Most standard video players successfully play fragmented video files without issue.\n *\n * @param {string} filename The attachment's filename\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction streamingAttachment(filename) {\n    return new FlagQualifier('streaming_attachment', filename);\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Generates TIFF images using LZW compression and in the TIFF8 format.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction tiff8Lzw() {\n    return new FlagQualifier('tiff8_lzw');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Used internally by Position within an Overlay, this flag will tile the overlay across your image.\n *\n * <b>Learn more:</b> {@link https://cloudinary.com/documentation/layers#automatic_tiling|Tiling overlay}\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction tiled() {\n    return new FlagQualifier('tiled');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Truncate (trim) a video file based on the start time defined in the metadata (relevant only where the metadata\n * includes a directive to play only a section of the video).\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction truncateTS() {\n    return new FlagQualifier('truncate_ts');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Create a waveform image (in the format specified by the file extension) from the audio or video file.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction waveform() {\n    return new FlagQualifier('waveform');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description A qualifier that ensures that an alpha channel is not applied to a TIFF image if it is a mask channel.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction ignoreMaskChannels() {\n    return new FlagQualifier('ignore_mask_channels');\n}\nconst Flag = {\n    animated, anyFormat, animatedPng, animatedWebP,\n    clipEvenOdd, lossy, preserveTransparency, png8, png24, png32, progressive, rasterize,\n    sanitize, stripProfile, tiff8Lzw, attachment, forceIcc, forceStrip, getInfo, immutableCache,\n    keepAttribution, keepIptc, custom, streamingAttachment, hlsv3, keepDar, noStream, mono,\n    layerApply, relative, regionRelative, splice, truncateTS, waveform, ignoreInitialAspectRatio, clip,\n    tiled, noOverflow, ignoreMaskChannels\n};\nexport { Flag, animated, anyFormat, animatedPng, animatedWebP, clipEvenOdd, lossy, preserveTransparency, png8, png24, png32, progressive, rasterize, sanitize, stripProfile, tiff8Lzw, attachment, forceIcc, forceStrip, getInfo, immutableCache, keepAttribution, keepIptc, custom, streamingAttachment, hlsv3, keepDar, noStream, mono, layerApply, relative, regionRelative, splice, truncateTS, waveform, ignoreInitialAspectRatio, clip, tiled, noOverflow, ignoreMaskChannels };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 692, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 698, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/qualifiers/progressive.js"],"sourcesContent":["/**\n * @description Contains functions to select the mode when using a progressive format.\n * <b>Learn more</b>: {@link https://cloudinary.com/documentation/transformation_reference#fl_progressive|Progressive modes}\n * @memberOf Qualifiers\n * @namespace Progressive\n * @example\n * import {Cloudinary} from \"@cloudinary/url-gen\";\n * import {format} from \"@cloudinary/url-gen/actions/delivery\";\n * import {jpg} from \"@cloudinary/url-gen/qualifiers/format\";\n * import {steep} from \"@cloudinary/url-gen/qualifiers/progressive\";\n *\n * const yourCldInstance = new Cloudinary({cloud: {cloudName: 'demo'}});\n * const image = yourCldInstance.image('woman');\n * image.delivery(format(jpg()).progressive(steep()))\n */\nimport { FlagQualifier } from \"./flag/FlagQualifier.js\";\nclass ProgressiveQualifier extends FlagQualifier {\n    constructor(mode) {\n        super('progressive', mode);\n    }\n}\n/**\n * @memberOf Qualifiers.Progressive\n */\nfunction none() {\n    return new ProgressiveQualifier('none');\n}\n/**\n * @memberOf Qualifiers.Progressive\n */\nfunction semi() {\n    return new ProgressiveQualifier('semi');\n}\n/**\n * @memberOf Qualifiers.Progressive\n */\nfunction steep() {\n    return new ProgressiveQualifier('steep');\n}\n/**\n * @memberOf Qualifiers.Progressive\n */\nfunction progressive() {\n    return new ProgressiveQualifier();\n}\nconst Progressive = {\n    semi,\n    none,\n    steep,\n    progressive,\n    ProgressiveQualifier\n};\nexport { Progressive, semi, none, steep, progressive, ProgressiveQualifier };\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;CAcC;;;;;;;;AACD;;AACA,MAAM,6BAA6B,0MAAA,CAAA,gBAAa;IAC5C,YAAY,IAAI,CAAE;QACd,KAAK,CAAC,eAAe;IACzB;AACJ;AACA;;CAEC,GACD,SAAS;IACL,OAAO,IAAI,qBAAqB;AACpC;AACA;;CAEC,GACD,SAAS;IACL,OAAO,IAAI,qBAAqB;AACpC;AACA;;CAEC,GACD,SAAS;IACL,OAAO,IAAI,qBAAqB;AACpC;AACA;;CAEC,GACD,SAAS;IACL,OAAO,IAAI;AACf;AACA,MAAM,cAAc;IAChB;IACA;IACA;IACA;IACA;AACJ","ignoreList":[0]}},
    {"offset": {"line": 755, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 761, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/qualifiers/format/FormatQualifier.js"],"sourcesContent":["import { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\n/**\n * @memberOf Qualifiers.Format\n * @extends {SDK.QualifierValue}\n */\nclass FormatQualifier extends QualifierValue {\n    constructor(val) {\n        super(val);\n        this.val = val;\n    }\n    getValue() {\n        return this.val;\n    }\n}\nexport { FormatQualifier };\n"],"names":[],"mappings":";;;AAAA;;AACA;;;CAGC,GACD,MAAM,wBAAwB,8MAAA,CAAA,iBAAc;IACxC,YAAY,GAAG,CAAE;QACb,KAAK,CAAC;QACN,IAAI,CAAC,GAAG,GAAG;IACf;IACA,WAAW;QACP,OAAO,IAAI,CAAC,GAAG;IACnB;AACJ","ignoreList":[0]}},
    {"offset": {"line": 779, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 785, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/internal/utils/objectFlip.js"],"sourcesContent":["/**\n * Flip keys and values for given object\n * @param obj\n */\nfunction objectFlip(obj) {\n    const result = {};\n    Object.keys(obj).forEach((key) => {\n        result[obj[key]] = key;\n    });\n    return result;\n}\nexport { objectFlip };\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AACD,SAAS,WAAW,GAAG;IACnB,MAAM,SAAS,CAAC;IAChB,OAAO,IAAI,CAAC,KAAK,OAAO,CAAC,CAAC;QACtB,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG;IACvB;IACA,OAAO;AACX","ignoreList":[0]}},
    {"offset": {"line": 799, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 805, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/internal/internalConstants.js"],"sourcesContent":["/**\n * This file is for internal constants only.\n * It is not intended for public use and is not part of the public API\n */\nimport { objectFlip } from \"./utils/objectFlip.js\";\nexport const CONDITIONAL_OPERATORS = {\n    \"=\": \"eq\",\n    \"!=\": \"ne\",\n    \"<\": \"lt\",\n    \">\": \"gt\",\n    \"<=\": \"lte\",\n    \">=\": \"gte\",\n    \"&&\": \"and\",\n    \"||\": \"or\",\n    \"*\": \"mul\",\n    \"/\": \"div\",\n    \"+\": \"add\",\n    \"-\": \"sub\",\n    \"^\": \"pow\"\n};\nexport const RESERVED_NAMES = {\n    \"aspect_ratio\": \"ar\",\n    \"aspectRatio\": \"ar\",\n    \"current_page\": \"cp\",\n    \"currentPage\": \"cp\",\n    \"duration\": \"du\",\n    \"face_count\": \"fc\",\n    \"faceCount\": \"fc\",\n    \"height\": \"h\",\n    \"initial_aspect_ratio\": \"iar\",\n    \"initial_height\": \"ih\",\n    \"initial_width\": \"iw\",\n    \"initialAspectRatio\": \"iar\",\n    \"initialHeight\": \"ih\",\n    \"initialWidth\": \"iw\",\n    \"initial_duration\": \"idu\",\n    \"initialDuration\": \"idu\",\n    \"page_count\": \"pc\",\n    \"page_x\": \"px\",\n    \"page_y\": \"py\",\n    \"pageCount\": \"pc\",\n    \"pageX\": \"px\",\n    \"pageY\": \"py\",\n    \"tags\": \"tags\",\n    \"width\": \"w\",\n    \"trimmed_aspect_ratio\": \"tar\",\n    \"current_public_id\": \"cpi\",\n    \"initial_density\": \"idn\",\n    \"page_names\": \"pgnames\"\n};\nexport const ACTION_TYPE_TO_CROP_MODE_MAP = {\n    limitFit: 'limit',\n    limitFill: 'lfill',\n    minimumFit: 'mfit',\n    thumbnail: 'thumb',\n    limitPad: 'lpad',\n    minimumPad: 'mpad',\n    autoPad: 'auto_pad'\n};\nexport const ACTION_TYPE_TO_DELIVERY_MODE_MAP = {\n    colorSpace: 'cs',\n    dpr: 'dpr',\n    density: 'dn',\n    defaultImage: 'd',\n    format: 'f',\n    quality: 'q'\n};\nexport const ACTION_TYPE_TO_EFFECT_MODE_MAP = {\n    redEye: 'redeye',\n    advancedRedEye: 'adv_redeye',\n    oilPaint: 'oil_paint',\n    unsharpMask: 'unsharp_mask',\n    makeTransparent: 'make_transparent',\n    generativeRestore: 'gen_restore',\n    upscale: 'upscale'\n};\nexport const ACTION_TYPE_TO_QUALITY_MODE_MAP = {\n    autoBest: 'auto:best',\n    autoEco: 'auto:eco',\n    autoGood: 'auto:good',\n    autoLow: 'auto:low',\n    jpegminiHigh: 'jpegmini:1',\n    jpegminiMedium: 'jpegmini:2',\n    jpegminiBest: 'jpegmini:0'\n};\nexport const ACTION_TYPE_TO_STREAMING_PROFILE_MODE_MAP = {\n    fullHd: 'full_hd',\n    fullHdWifi: 'full_hd_wifi',\n    fullHdLean: 'full_hd_lean',\n    hdLean: 'hd_lean'\n};\nexport const CHROMA_VALUE_TO_CHROMA_MODEL_ENUM = {\n    444: \"CHROMA_444\",\n    420: \"CHROMA_420\"\n};\nexport const COLOR_SPACE_MODEL_MODE_TO_COLOR_SPACE_MODE_MAP = {\n    'noCmyk': 'no_cmyk',\n    'keepCmyk': 'keep_cmyk',\n    'tinySrgb': 'tinysrgb',\n    'srgbTrueColor': 'srgb:truecolor'\n};\nexport const ACTION_TYPE_TO_BLEND_MODE_MAP = {\n    'antiRemoval': 'anti_removal'\n};\nexport const CHROMA_MODEL_ENUM_TO_CHROMA_VALUE = objectFlip(CHROMA_VALUE_TO_CHROMA_MODEL_ENUM);\nexport const COLOR_SPACE_MODE_TO_COLOR_SPACE_MODEL_MODE_MAP = objectFlip(COLOR_SPACE_MODEL_MODE_TO_COLOR_SPACE_MODE_MAP);\nexport const CROP_MODE_TO_ACTION_TYPE_MAP = objectFlip(ACTION_TYPE_TO_CROP_MODE_MAP);\nexport const DELIVERY_MODE_TO_ACTION_TYPE_MAP = objectFlip(ACTION_TYPE_TO_DELIVERY_MODE_MAP);\nexport const EFFECT_MODE_TO_ACTION_TYPE_MAP = objectFlip(ACTION_TYPE_TO_EFFECT_MODE_MAP);\nexport const QUALITY_MODE_TO_ACTION_TYPE_MAP = objectFlip(ACTION_TYPE_TO_QUALITY_MODE_MAP);\nexport const STREAMING_PROFILE_TO_ACTION_TYPE_MAP = objectFlip(ACTION_TYPE_TO_STREAMING_PROFILE_MODE_MAP);\n"],"names":[],"mappings":"AAAA;;;CAGC;;;;;;;;;;;;;;;;;;;AACD;;AACO,MAAM,wBAAwB;IACjC,KAAK;IACL,MAAM;IACN,KAAK;IACL,KAAK;IACL,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;AACT;AACO,MAAM,iBAAiB;IAC1B,gBAAgB;IAChB,eAAe;IACf,gBAAgB;IAChB,eAAe;IACf,YAAY;IACZ,cAAc;IACd,aAAa;IACb,UAAU;IACV,wBAAwB;IACxB,kBAAkB;IAClB,iBAAiB;IACjB,sBAAsB;IACtB,iBAAiB;IACjB,gBAAgB;IAChB,oBAAoB;IACpB,mBAAmB;IACnB,cAAc;IACd,UAAU;IACV,UAAU;IACV,aAAa;IACb,SAAS;IACT,SAAS;IACT,QAAQ;IACR,SAAS;IACT,wBAAwB;IACxB,qBAAqB;IACrB,mBAAmB;IACnB,cAAc;AAClB;AACO,MAAM,+BAA+B;IACxC,UAAU;IACV,WAAW;IACX,YAAY;IACZ,WAAW;IACX,UAAU;IACV,YAAY;IACZ,SAAS;AACb;AACO,MAAM,mCAAmC;IAC5C,YAAY;IACZ,KAAK;IACL,SAAS;IACT,cAAc;IACd,QAAQ;IACR,SAAS;AACb;AACO,MAAM,iCAAiC;IAC1C,QAAQ;IACR,gBAAgB;IAChB,UAAU;IACV,aAAa;IACb,iBAAiB;IACjB,mBAAmB;IACnB,SAAS;AACb;AACO,MAAM,kCAAkC;IAC3C,UAAU;IACV,SAAS;IACT,UAAU;IACV,SAAS;IACT,cAAc;IACd,gBAAgB;IAChB,cAAc;AAClB;AACO,MAAM,4CAA4C;IACrD,QAAQ;IACR,YAAY;IACZ,YAAY;IACZ,QAAQ;AACZ;AACO,MAAM,oCAAoC;IAC7C,KAAK;IACL,KAAK;AACT;AACO,MAAM,iDAAiD;IAC1D,UAAU;IACV,YAAY;IACZ,YAAY;IACZ,iBAAiB;AACrB;AACO,MAAM,gCAAgC;IACzC,eAAe;AACnB;AACO,MAAM,oCAAoC,CAAA,GAAA,sMAAA,CAAA,aAAU,AAAD,EAAE;AACrD,MAAM,iDAAiD,CAAA,GAAA,sMAAA,CAAA,aAAU,AAAD,EAAE;AAClE,MAAM,+BAA+B,CAAA,GAAA,sMAAA,CAAA,aAAU,AAAD,EAAE;AAChD,MAAM,mCAAmC,CAAA,GAAA,sMAAA,CAAA,aAAU,AAAD,EAAE;AACpD,MAAM,iCAAiC,CAAA,GAAA,sMAAA,CAAA,aAAU,AAAD,EAAE;AAClD,MAAM,kCAAkC,CAAA,GAAA,sMAAA,CAAA,aAAU,AAAD,EAAE;AACnD,MAAM,uCAAuC,CAAA,GAAA,sMAAA,CAAA,aAAU,AAAD,EAAE","ignoreList":[0]}},
    {"offset": {"line": 935, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 941, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/internal/utils/dataStructureUtils.js"],"sourcesContent":["/**\n * Sort a map by key\n * @private\n * @param map <string, any>\n * @Return array of map's values sorted by key\n */\nfunction mapToSortedArray(map, flags) {\n    const array = Array.from(map.entries());\n    // objects from the Array.from() method above are stored in array of arrays:\n    // [[qualifierKey, QualifierObj], [qualifierKey, QualifierObj]]\n    // Flags is an array of FlagQualifierObj\n    // We need to convert it to the same form: [flagQualifier] =>  ['fl', flagQualifier]\n    flags.forEach((flag) => {\n        array.push(['fl', flag]); // push ['fl', flagQualifier]\n    });\n    return array.sort().map((v) => v[1]);\n}\n/**\n * Checks if `value` is a string.\n * @private\n * @param {*} value The value to check.\n * @return {boolean} `true` if `value` is a string, else `false`.\n */\nfunction isString(value) {\n    return (typeof value === 'string' || value instanceof String);\n}\nexport { isString, mapToSortedArray };\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;;AACD,SAAS,iBAAiB,GAAG,EAAE,KAAK;IAChC,MAAM,QAAQ,MAAM,IAAI,CAAC,IAAI,OAAO;IACpC,4EAA4E;IAC5E,+DAA+D;IAC/D,wCAAwC;IACxC,oFAAoF;IACpF,MAAM,OAAO,CAAC,CAAC;QACX,MAAM,IAAI,CAAC;YAAC;YAAM;SAAK,GAAG,6BAA6B;IAC3D;IACA,OAAO,MAAM,IAAI,GAAG,GAAG,CAAC,CAAC,IAAM,CAAC,CAAC,EAAE;AACvC;AACA;;;;;CAKC,GACD,SAAS,SAAS,KAAK;IACnB,OAAQ,OAAO,UAAU,YAAY,iBAAiB;AAC1D","ignoreList":[0]}},
    {"offset": {"line": 973, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 979, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/internal/models/actionToJson.js"],"sourcesContent":["import { createUnsupportedError } from \"../utils/unsupportedError.js\";\n/**\n * Returns the action's model\n */\nexport function actionToJson() {\n    var _a, _b, _c;\n    const actionModelIsNotEmpty = this._actionModel && Object.keys(this._actionModel).length;\n    const sourceTransformationError = (_c = (_b = (_a = this._actionModel) === null || _a === void 0 ? void 0 : _a.source) === null || _b === void 0 ? void 0 : _b.transformation) === null || _c === void 0 ? void 0 : _c.error;\n    // Should return error when there is unsupported transformation inside\n    if (sourceTransformationError && sourceTransformationError instanceof Error) {\n        return { error: sourceTransformationError };\n    }\n    if (actionModelIsNotEmpty) {\n        return this._actionModel;\n    }\n    return { error: createUnsupportedError(`unsupported action ${this.constructor.name}`) };\n}\n"],"names":[],"mappings":";;;AAAA;;AAIO,SAAS;IACZ,IAAI,IAAI,IAAI;IACZ,MAAM,wBAAwB,IAAI,CAAC,YAAY,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,MAAM;IACxF,MAAM,4BAA4B,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,YAAY,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,MAAM,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,cAAc,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI,GAAG,KAAK;IAC5N,sEAAsE;IACtE,IAAI,6BAA6B,qCAAqC,OAAO;QACzE,OAAO;YAAE,OAAO;QAA0B;IAC9C;IACA,IAAI,uBAAuB;QACvB,OAAO,IAAI,CAAC,YAAY;IAC5B;IACA,OAAO;QAAE,OAAO,CAAA,GAAA,4MAAA,CAAA,yBAAsB,AAAD,EAAE,CAAC,mBAAmB,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE;IAAE;AAC1F","ignoreList":[0]}},
    {"offset": {"line": 1001, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1007, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/internal/models/ActionModel.js"],"sourcesContent":["import { actionToJson } from \"./actionToJson.js\";\nexport class ActionModel {\n    constructor() {\n        this._actionModel = {};\n    }\n    toJson() {\n        return actionToJson.apply(this);\n    }\n}\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM;IACT,aAAc;QACV,IAAI,CAAC,YAAY,GAAG,CAAC;IACzB;IACA,SAAS;QACL,OAAO,yMAAA,CAAA,eAAY,CAAC,KAAK,CAAC,IAAI;IAClC;AACJ","ignoreList":[0]}},
    {"offset": {"line": 1020, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1026, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/internal/Action.js"],"sourcesContent":["import { FlagQualifier } from \"../qualifiers/flag/FlagQualifier.js\";\nimport { Qualifier } from \"./qualifier/Qualifier.js\";\nimport { mapToSortedArray } from \"./utils/dataStructureUtils.js\";\nimport { ActionModel } from \"./models/ActionModel.js\";\n/**\n * @summary SDK\n * @memberOf SDK\n * @description Defines the category of transformation to perform.\n */\nclass Action extends ActionModel {\n    constructor() {\n        super(...arguments);\n        // We're using map, to overwrite existing keys. for example:\n        // addParam(w_100).addQualifier(w_200) should result in w_200. and not w_100,w_200\n        this.qualifiers = new Map();\n        // Unlike regular qualifiers, there can be multiple flags in each url component /fl_1,fl_2/\n        // If the falgs are added to the qualifiers map, only a single flag could exist in a component (it's a map)\n        // So flags are stored separately until the very end because of that reason\n        this.flags = [];\n        this.delimiter = ','; // {qualifier}{delimiter}{qualifier} for example: `${'w_100'}${','}${'c_fill'}`\n        this.actionTag = ''; // A custom name tag to identify this action in the future\n    }\n    prepareQualifiers() { }\n    /**\n     * @description Returns the custom name tag that was given to this action\n     * @return {string}\n     */\n    getActionTag() {\n        return this.actionTag;\n    }\n    /**\n     * @description Sets the custom name tag for this action\n     * @return {this}\n     */\n    setActionTag(tag) {\n        this.actionTag = tag;\n        return this;\n    }\n    /**\n     * @description Calls toString() on all child qualifiers (implicitly by using .join()).\n     * @return {string}\n     */\n    toString() {\n        this.prepareQualifiers();\n        return mapToSortedArray(this.qualifiers, this.flags).join(this.delimiter);\n    }\n    /**\n     * @description Adds the parameter to the action.\n     * @param {SDK.Qualifier} qualifier\n     * @return {this}\n     */\n    addQualifier(qualifier) {\n        // if string, find the key and value\n        if (typeof qualifier === 'string') {\n            const [key, value] = qualifier.toLowerCase().split('_');\n            if (key === 'fl') {\n                // if string qualifier is a flag, store it in the flags arrays\n                this.flags.push(new FlagQualifier(value));\n            }\n            else {\n                // if the string qualifier is not a flag, create a new qualifier from it\n                this.qualifiers.set(key, new Qualifier(key, value));\n            }\n        }\n        else {\n            // if a qualifier object, insert to the qualifiers map\n            this.qualifiers.set(qualifier.key, qualifier);\n        }\n        return this;\n    }\n    /**\n     * @description Adds a flag to the current action.\n     * @param {Qualifiers.Flag} flag\n     * @return {this}\n     */\n    addFlag(flag) {\n        if (typeof flag === 'string') {\n            this.flags.push(new FlagQualifier(flag));\n        }\n        else {\n            if (flag instanceof FlagQualifier) {\n                this.flags.push(flag);\n            }\n        }\n        return this;\n    }\n    addValueToQualifier(qualifierKey, qualifierValue) {\n        this.qualifiers.get(qualifierKey).addValue(qualifierValue);\n        return this;\n    }\n}\nexport { Action };\n"],"names":[],"mappings":";;;AAEA;AADA;AADA;AAGA;;;;;AACA;;;;CAIC,GACD,MAAM,eAAe,wMAAA,CAAA,cAAW;IAC5B,aAAc;QACV,KAAK,IAAI;QACT,4DAA4D;QAC5D,kFAAkF;QAClF,IAAI,CAAC,UAAU,GAAG,IAAI;QACtB,2FAA2F;QAC3F,2GAA2G;QAC3G,2EAA2E;QAC3E,IAAI,CAAC,KAAK,GAAG,EAAE;QACf,IAAI,CAAC,SAAS,GAAG,KAAK,+EAA+E;QACrG,IAAI,CAAC,SAAS,GAAG,IAAI,0DAA0D;IACnF;IACA,oBAAoB,CAAE;IACtB;;;KAGC,GACD,eAAe;QACX,OAAO,IAAI,CAAC,SAAS;IACzB;IACA;;;KAGC,GACD,aAAa,GAAG,EAAE;QACd,IAAI,CAAC,SAAS,GAAG;QACjB,OAAO,IAAI;IACf;IACA;;;KAGC,GACD,WAAW;QACP,IAAI,CAAC,iBAAiB;QACtB,OAAO,CAAA,GAAA,8MAAA,CAAA,mBAAgB,AAAD,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS;IAC5E;IACA;;;;KAIC,GACD,aAAa,SAAS,EAAE;QACpB,oCAAoC;QACpC,IAAI,OAAO,cAAc,UAAU;YAC/B,MAAM,CAAC,KAAK,MAAM,GAAG,UAAU,WAAW,GAAG,KAAK,CAAC;YACnD,IAAI,QAAQ,MAAM;gBACd,8DAA8D;gBAC9D,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,0MAAA,CAAA,gBAAa,CAAC;YACtC,OACK;gBACD,wEAAwE;gBACxE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,IAAI,yMAAA,CAAA,YAAS,CAAC,KAAK;YAChD;QACJ,OACK;YACD,sDAAsD;YACtD,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,GAAG,EAAE;QACvC;QACA,OAAO,IAAI;IACf;IACA;;;;KAIC,GACD,QAAQ,IAAI,EAAE;QACV,IAAI,OAAO,SAAS,UAAU;YAC1B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,0MAAA,CAAA,gBAAa,CAAC;QACtC,OACK;YACD,IAAI,gBAAgB,0MAAA,CAAA,gBAAa,EAAE;gBAC/B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;YACpB;QACJ;QACA,OAAO,IAAI;IACf;IACA,oBAAoB,YAAY,EAAE,cAAc,EAAE;QAC9C,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,cAAc,QAAQ,CAAC;QAC3C,OAAO,IAAI;IACf;AACJ","ignoreList":[0]}},
    {"offset": {"line": 1116, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1122, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/actions/delivery/DeliveryAction.js"],"sourcesContent":["import { Action } from \"../../internal/Action.js\";\nimport { FormatQualifier } from \"../../qualifiers/format/FormatQualifier.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { DELIVERY_MODE_TO_ACTION_TYPE_MAP } from \"../../internal/internalConstants.js\";\n/**\n * @description Qualifies the delivery of an asset.\n * @memberOf Actions.Delivery\n * @extends SDK.Action\n */\nclass DeliveryAction extends Action {\n    /**\n     * @param {string} deliveryKey A generic Delivery Action Key (such as q, f, dn, etc.)\n     * @param {string} deliveryType A Format Qualifiers for the action, such as Quality.auto()\n     * @param {string} modelProperty internal model property of the action, for example quality uses `level` while dpr uses `density`\n     * @see Visit {@link Actions.Delivery|Delivery} for an example\n     */\n    constructor(deliveryKey, deliveryType, modelProperty) {\n        super();\n        this._actionModel = {};\n        let deliveryTypeValue;\n        if (deliveryType instanceof FormatQualifier) {\n            deliveryTypeValue = deliveryType.getValue();\n        }\n        else {\n            deliveryTypeValue = deliveryType;\n        }\n        this._actionModel.actionType = DELIVERY_MODE_TO_ACTION_TYPE_MAP[deliveryKey];\n        this._actionModel[modelProperty] = deliveryTypeValue;\n        this.addQualifier(new Qualifier(deliveryKey, deliveryType));\n    }\n}\nexport { DeliveryAction };\n"],"names":[],"mappings":";;;AACA;AAEA;AADA;AAFA;;;;;AAIA;;;;CAIC,GACD,MAAM,uBAAuB,yLAAA,CAAA,SAAM;IAC/B;;;;;KAKC,GACD,YAAY,WAAW,EAAE,YAAY,EAAE,aAAa,CAAE;QAClD,KAAK;QACL,IAAI,CAAC,YAAY,GAAG,CAAC;QACrB,IAAI;QACJ,IAAI,wBAAwB,8MAAA,CAAA,kBAAe,EAAE;YACzC,oBAAoB,aAAa,QAAQ;QAC7C,OACK;YACD,oBAAoB;QACxB;QACA,IAAI,CAAC,YAAY,CAAC,UAAU,GAAG,oMAAA,CAAA,mCAAgC,CAAC,YAAY;QAC5E,IAAI,CAAC,YAAY,CAAC,cAAc,GAAG;QACnC,IAAI,CAAC,YAAY,CAAC,IAAI,yMAAA,CAAA,YAAS,CAAC,aAAa;IACjD;AACJ","ignoreList":[0]}},
    {"offset": {"line": 1158, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1164, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/actions/delivery/DeliveryFormatAction.js"],"sourcesContent":["import { lossy, preserveTransparency, progressive } from \"../../qualifiers/flag.js\";\nimport { DeliveryAction } from \"./DeliveryAction.js\";\nimport { ProgressiveQualifier } from \"../../qualifiers/progressive.js\";\n/**\n * @memberOf Actions.Delivery\n * @extends {Actions.Delivery.DeliveryAction}\n * @see Visit {@link Actions.Delivery|Delivery} for an example\n */\nclass DeliveryFormatAction extends DeliveryAction {\n    constructor(deliveryKey, deliveryType) {\n        super(deliveryKey, deliveryType, 'formatType');\n    }\n    /**\n     * @description Uses lossy compression when delivering animated GIF files.\n     * @return {this}\n     */\n    lossy() {\n        this._actionModel.lossy = true;\n        this.addFlag(lossy());\n        return this;\n    }\n    /**\n     * @description Uses progressive compression when delivering JPG file format.\n     * @return {this}\n     */\n    progressive(mode) {\n        if (mode instanceof ProgressiveQualifier) {\n            this._actionModel.progressive = { mode: mode.getFlagValue() };\n            this.addFlag(mode);\n        }\n        else {\n            this._actionModel.progressive = { mode: mode };\n            this.addFlag(progressive(mode));\n        }\n        return this;\n    }\n    /**\n     * @description Ensures that images with a transparency channel are delivered in PNG format.\n     */\n    preserveTransparency() {\n        this._actionModel.preserveTransparency = true;\n        this.addFlag(preserveTransparency());\n        return this;\n    }\n    static fromJson(actionModel) {\n        const { formatType, lossy, progressive, preserveTransparency } = actionModel;\n        let result;\n        if (formatType) {\n            result = new this('f', formatType);\n        }\n        else {\n            result = new this('f');\n        }\n        if (progressive) {\n            if (progressive.mode) {\n                result.progressive(progressive.mode);\n            }\n            else {\n                result.progressive();\n            }\n        }\n        lossy && result.lossy();\n        preserveTransparency && result.preserveTransparency();\n        return result;\n    }\n}\nexport { DeliveryFormatAction };\n"],"names":[],"mappings":";;;AAAA;AAEA;AADA;;;;AAEA;;;;CAIC,GACD,MAAM,6BAA6B,4MAAA,CAAA,iBAAc;IAC7C,YAAY,WAAW,EAAE,YAAY,CAAE;QACnC,KAAK,CAAC,aAAa,cAAc;IACrC;IACA;;;KAGC,GACD,QAAQ;QACJ,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG;QAC1B,IAAI,CAAC,OAAO,CAAC,CAAA,GAAA,yLAAA,CAAA,QAAK,AAAD;QACjB,OAAO,IAAI;IACf;IACA;;;KAGC,GACD,YAAY,IAAI,EAAE;QACd,IAAI,gBAAgB,gMAAA,CAAA,uBAAoB,EAAE;YACtC,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG;gBAAE,MAAM,KAAK,YAAY;YAAG;YAC5D,IAAI,CAAC,OAAO,CAAC;QACjB,OACK;YACD,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG;gBAAE,MAAM;YAAK;YAC7C,IAAI,CAAC,OAAO,CAAC,CAAA,GAAA,yLAAA,CAAA,cAAW,AAAD,EAAE;QAC7B;QACA,OAAO,IAAI;IACf;IACA;;KAEC,GACD,uBAAuB;QACnB,IAAI,CAAC,YAAY,CAAC,oBAAoB,GAAG;QACzC,IAAI,CAAC,OAAO,CAAC,CAAA,GAAA,yLAAA,CAAA,uBAAoB,AAAD;QAChC,OAAO,IAAI;IACf;IACA,OAAO,SAAS,WAAW,EAAE;QACzB,MAAM,EAAE,UAAU,EAAE,KAAK,EAAE,WAAW,EAAE,oBAAoB,EAAE,GAAG;QACjE,IAAI;QACJ,IAAI,YAAY;YACZ,SAAS,IAAI,IAAI,CAAC,KAAK;QAC3B,OACK;YACD,SAAS,IAAI,IAAI,CAAC;QACtB;QACA,IAAI,aAAa;YACb,IAAI,YAAY,IAAI,EAAE;gBAClB,OAAO,WAAW,CAAC,YAAY,IAAI;YACvC,OACK;gBACD,OAAO,WAAW;YACtB;QACJ;QACA,SAAS,OAAO,KAAK;QACrB,wBAAwB,OAAO,oBAAoB;QACnD,OAAO;IACX;AACJ","ignoreList":[0]}},
    {"offset": {"line": 1234, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1240, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/internal/utils/prepareColor.js"],"sourcesContent":["/**\n * Returns RGB or Color\n * @private\n * @param color\n */\nexport function prepareColor(color) {\n    if (color) {\n        return color.match(/^#/) ? `rgb:${color.substr(1)}` : color;\n    }\n    else {\n        return color;\n    }\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;AACM,SAAS,aAAa,KAAK;IAC9B,IAAI,OAAO;QACP,OAAO,MAAM,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,MAAM,MAAM,CAAC,IAAI,GAAG;IAC1D,OACK;QACD,OAAO;IACX;AACJ","ignoreList":[0]}},
    {"offset": {"line": 1254, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1260, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/actions/background/actions/BackgroundColor.js"],"sourcesContent":["import { Action } from \"../../../internal/Action.js\";\nimport { QualifierValue } from \"../../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../../internal/qualifier/Qualifier.js\";\nimport { prepareColor } from \"../../../internal/utils/prepareColor.js\";\n/**\n * @extends SDK.Action\n * @description A class for background transformations.\n */\nclass BackgroundColor extends Action {\n    constructor(color) {\n        super();\n        this._actionModel = {};\n        this.addQualifier(new Qualifier('b', new QualifierValue(prepareColor(color)).setDelimiter('_')));\n        this._actionModel.color = color;\n        this._actionModel.actionType = 'backgroundColor';\n    }\n    static fromJson(actionModel) {\n        const { color } = actionModel;\n        // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n        // This allows the inheriting classes to determine the class to be created\n        const result = new this(color);\n        return result;\n    }\n}\nexport { BackgroundColor };\n"],"names":[],"mappings":";;;AAEA;AADA;AAEA;AAHA;;;;;AAIA;;;CAGC,GACD,MAAM,wBAAwB,yLAAA,CAAA,SAAM;IAChC,YAAY,KAAK,CAAE;QACf,KAAK;QACL,IAAI,CAAC,YAAY,GAAG,CAAC;QACrB,IAAI,CAAC,YAAY,CAAC,IAAI,yMAAA,CAAA,YAAS,CAAC,KAAK,IAAI,8MAAA,CAAA,iBAAc,CAAC,CAAA,GAAA,wMAAA,CAAA,eAAY,AAAD,EAAE,QAAQ,YAAY,CAAC;QAC1F,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG;QAC1B,IAAI,CAAC,YAAY,CAAC,UAAU,GAAG;IACnC;IACA,OAAO,SAAS,WAAW,EAAE;QACzB,MAAM,EAAE,KAAK,EAAE,GAAG;QAClB,mGAAmG;QACnG,0EAA0E;QAC1E,MAAM,SAAS,IAAI,IAAI,CAAC;QACxB,OAAO;IACX;AACJ","ignoreList":[0]}},
    {"offset": {"line": 1291, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1297, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/internal/models/IErrorObject.js"],"sourcesContent":["/**\n * Validates obj is an instance of IErrorObject\n * @param obj\n */\nfunction isErrorObject(obj) {\n    const errorObj = obj;\n    return ('error' in errorObj) && !!errorObj.error;\n}\nexport { isErrorObject };\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AACD,SAAS,cAAc,GAAG;IACtB,MAAM,WAAW;IACjB,OAAO,AAAC,WAAW,YAAa,CAAC,CAAC,SAAS,KAAK;AACpD","ignoreList":[0]}},
    {"offset": {"line": 1308, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1314, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/transformation/Transformation.js"],"sourcesContent":["import { Action } from \"../internal/Action.js\";\nimport { BackgroundColor } from \"../actions/background/actions/BackgroundColor.js\";\nimport { FlagQualifier } from \"../qualifiers/flag/FlagQualifier.js\";\nimport { RawAction } from \"../internal/RawAction.js\";\nimport { isErrorObject } from \"../internal/models/IErrorObject.js\";\nimport { DeliveryFormatAction } from \"../actions/delivery/DeliveryFormatAction.js\";\n/**\n * @summary SDK\n * @description - Defines how to transform an asset\n * @memberOf SDK\n */\nclass Transformation {\n    constructor() {\n        this.actions = [];\n    }\n    /**\n     * @param {SDK.Action | string} action\n     * @return {this}\n     */\n    addAction(action) {\n        let actionToAdd;\n        if (typeof action === 'string') {\n            if (action.indexOf('/') >= 0) {\n                throw 'addAction cannot accept a string with a forward slash in it - /, use .addTransformation() instead';\n            }\n            else {\n                actionToAdd = new RawAction(action);\n            }\n        }\n        else {\n            actionToAdd = action;\n        }\n        this.actions.push(actionToAdd);\n        return this;\n    }\n    /**\n     * @description Allows the injection of a raw transformation as a string into the transformation, or a Transformation instance that was previously created\n     * @param {string | SDK.Transformation} tx\n     * @example\n     * import {Transformation} from \"@cloudinary/url-gen\";\n     *\n     * const transformation = new Transformation();\n     * transformation.addTransformation('w_100/w_200/w_300');\n     * @return {this}\n     */\n    addTransformation(tx) {\n        if (tx instanceof Transformation) {\n            // Concat the new actions into the existing actions\n            this.actions = this.actions.concat(tx.actions);\n        }\n        else {\n            this.actions.push(new RawAction(tx));\n        }\n        return this;\n    }\n    /**\n     * @return {string}\n     */\n    toString() {\n        return this.actions\n            .map((action) => {\n            return action.toString();\n        })\n            .filter((a) => a)\n            .join('/');\n    }\n    /**\n     * @description Delivers an animated GIF.\n     * @param {AnimatedAction} animatedAction\n     * @return {this}\n     */\n    animated(animatedAction) {\n        return this.addAction(animatedAction);\n    }\n    /**\n     * @description Adds a border around the image.\n     * @param {Border} borderAction\n     * @return {this}\n     */\n    border(borderAction) {\n        return this.addAction(borderAction);\n    }\n    /**\n     * @description Adjusts the shape of the delivered image. </br>\n     * <b>Learn more:</b> {@link https://cloudinary.com/documentation/effects_and_artistic_enhancements#distort|Shape changes and distortion effects}\n     * @param {IReshape} reshapeAction\n     * @return {this}\n     */\n    reshape(reshapeAction) {\n        return this.addAction(reshapeAction);\n    }\n    /**\n     * @description Resize the asset using provided resize action\n     * @param {ResizeSimpleAction} resizeAction\n     * @return {this}\n     */\n    resize(resizeAction) {\n        return this.addAction(resizeAction);\n    }\n    /**\n     * @desc An alias to Action Delivery.quality\n     * @param {string|number} quality\n     * @return {this}\n     */\n    quality(quality) {\n        this.addAction(new DeliveryFormatAction('q', quality));\n        return this;\n    }\n    /**\n     * @desc An alias to Action Delivery.format\n     * @param {string} format\n     * @return {this}\n     */\n    format(format) {\n        this.addAction(new DeliveryFormatAction('f', format));\n        return this;\n    }\n    /**\n     * @description Rounds the specified corners of an image.\n     * @param roundCornersAction\n     * @return {this}\n     */\n    roundCorners(roundCornersAction) {\n        return this.addAction(roundCornersAction);\n    }\n    /**\n     * @description Adds an overlay over the base image.\n     * @param {LayerAction} overlayAction\n     * @return {this}\n     */\n    overlay(overlayAction) {\n        return this.addAction(overlayAction);\n    }\n    /**\n     * @description Adds an underlay under the base image.\n     * @param {LayerAction} underlayAction\n     * @return {this}\n     */\n    underlay(underlayAction) {\n        underlayAction.setLayerType('u');\n        return this.addAction(underlayAction);\n    }\n    /**\n     * @description Defines an new user variable.\n     * @param {VariableAction} variableAction\n     * @return {this}\n     */\n    addVariable(variableAction) {\n        return this.addAction(variableAction);\n    }\n    /**\n     * @description Specifies a condition to be met before applying a transformation.\n     * @param {ConditionalAction} conditionAction\n     * @return {this}\n     */\n    conditional(conditionAction) {\n        return this.addAction(conditionAction);\n    }\n    /**\n     * @description Applies a filter or an effect on an asset.\n     * @param {SimpleEffectAction} effectAction\n     * @return {this}\n     */\n    effect(effectAction) {\n        return this.addAction(effectAction);\n    }\n    /**\n     * @description Applies adjustment effect on an asset.\n     * @param action\n     * @return {this}\n     */\n    adjust(action) {\n        return this.addAction(action);\n    }\n    /**\n     * @description Rotates the asset by the given angle.\n     * @param {RotateAction} rotateAction\n     * @return {this}\n     */\n    rotate(rotateAction) {\n        return this.addAction(rotateAction);\n    }\n    /**\n     * @description Applies a pre-defined named transformation of the given name.\n     * @param {NamedTransformation} namedTransformation\n     * @return {this}\n     */\n    namedTransformation(namedTransformation) {\n        return this.addAction(namedTransformation);\n    }\n    /**\n     * @description Applies delivery action.\n     * @param deliveryAction\n     * @return {this}\n     */\n    delivery(deliveryAction) {\n        return this.addAction(deliveryAction);\n    }\n    /**\n     * @description Sets the color of the background.\n     * @param {Qualifiers.Color} color\n     * @return {this}\n     */\n    backgroundColor(color) {\n        return this.addAction(new BackgroundColor(color));\n    }\n    /**\n     * @description Adds a layer in a Photoshop document.\n     * @param action\n     * @return {this}\n     */\n    psdTools(action) {\n        return this.addAction(action);\n    }\n    /**\n     * @description Extracts an image or a page using an index, a range, or a name from a layered media asset.\n     * @param action\n     * @return {this}\n     */\n    extract(action) {\n        return this.addAction(action);\n    }\n    /**\n     * @description Adds a flag as a separate action.\n     * @param {Qualifiers.Flag | string} flagQualifier\n     * @return {this}\n     */\n    addFlag(flagQualifier) {\n        const action = new Action();\n        let flagToAdd = flagQualifier;\n        if (typeof flagQualifier === 'string') {\n            flagToAdd = new FlagQualifier(flagQualifier);\n        }\n        action.addQualifier(flagToAdd);\n        return this.addAction(action);\n    }\n    /**\n     * @description Inject a custom function into the image transformation pipeline.\n     * @return {this}\n     */\n    customFunction(customFunction) {\n        return this.addAction(customFunction);\n    }\n    /**\n     * Transcodes the video (or audio) to another format.\n     * @param {Action} action\n     * @return {this}\n     */\n    transcode(action) {\n        return this.addAction(action);\n    }\n    /**\n     * Applies the specified video edit action.\n     *\n     * @param {videoEditType} action\n     * @return {this}\n     */\n    videoEdit(action) {\n        return this.addAction(action);\n    }\n    toJson() {\n        const actions = [];\n        for (const action of this.actions) {\n            const json = action.toJson();\n            if (isErrorObject(json)) {\n                // Fail early and return an IErrorObject\n                return json;\n            }\n            actions.push(json);\n        }\n        return { actions };\n    }\n}\nexport { Transformation };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1566, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1572, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/transformation/ImageTransformation.js"],"sourcesContent":["import { Transformation } from \"./Transformation.js\";\n/**\n * @summary SDK\n * @extends {SDK.Transformation}\n * @memberOf SDK\n */\nclass ImageTransformation extends Transformation {\n}\nexport { ImageTransformation };\n"],"names":[],"mappings":";;;AAAA;;AACA;;;;CAIC,GACD,MAAM,4BAA4B,uMAAA,CAAA,iBAAc;AAChD","ignoreList":[0]}},
    {"offset": {"line": 1584, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1590, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/transformation/VideoTransformation.js"],"sourcesContent":["import { Transformation } from \"./Transformation.js\";\n/**\n * @summary SDK\n * @extends {SDK.Transformation}\n * @memberOf SDK\n */\nclass VideoTransformation extends Transformation {\n}\nexport { VideoTransformation };\n"],"names":[],"mappings":";;;AAAA;;AACA;;;;CAIC,GACD,MAAM,4BAA4B,uMAAA,CAAA,iBAAc;AAChD","ignoreList":[0]}},
    {"offset": {"line": 1602, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1608, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/qualifiers/gravity/GravityQualifier.js"],"sourcesContent":["import { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\n/**\n * @memberOf Gravity.GravityQualifier\n * @extends {SDK.Qualifier}\n */\nclass GravityQualifier extends Qualifier {\n    /**\n     * @param value, an array containing (GravityObject | AutoGravity | string) or a string;\n     */\n    constructor(value) {\n        super('g', new QualifierValue(value));\n    }\n}\nexport { GravityQualifier };\n"],"names":[],"mappings":";;;AACA;AADA;;;AAEA;;;CAGC,GACD,MAAM,yBAAyB,yMAAA,CAAA,YAAS;IACpC;;KAEC,GACD,YAAY,KAAK,CAAE;QACf,KAAK,CAAC,KAAK,IAAI,8MAAA,CAAA,iBAAc,CAAC;IAClC;AACJ","ignoreList":[0]}},
    {"offset": {"line": 1626, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1632, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/qualifiers/aspectRatio/AspectRatioQualifierValue.js"],"sourcesContent":["import { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\n/**\n * @memberOf Qualifiers.AspectRatio\n * @extends {SDK.QualifierValue}\n */\nexport class AspectRatioQualifierValue extends QualifierValue {\n}\n"],"names":[],"mappings":";;;AAAA;;AAKO,MAAM,kCAAkC,8MAAA,CAAA,iBAAc;AAC7D","ignoreList":[0]}},
    {"offset": {"line": 1639, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1645, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/internal/utils/toFloatAsString.js"],"sourcesContent":["/**\n * @description\n * Returns a string representing the float value of the input, if the input was a number-like.\n * Examples:\n * - '1.0' -> '1.0'\n * - 1 -> '1.0'\n * - '5' -> '5.0'\n * - 'auto' -> 'auto'\n * @private\n * @param {string|number} value\n * @return {string}\n */\nexport function toFloatAsString(value) {\n    // Turn the input to string\n    // The Function will return `returnValue` value if the input is not a number-like expression\n    const returnValue = value.toString();\n    // if the string contains letters, return the input\n    if (returnValue.match(/[A-Z]/gi)) {\n        return returnValue;\n    }\n    // If the leading digit is 0, and we have more than 1 digit, it's not a number.\n    // 00, 00000, 0x15 etc.\n    if (returnValue.length > 1 && returnValue[0] === '0') {\n        return returnValue;\n    }\n    // Final sanity check, parse the number as a float and check if its NaN\n    const isNumberLike = !isNaN(parseFloat(returnValue)) && returnValue.indexOf(':') === -1;\n    // If it's a number-like, but the input does not contain a decimal - add it.\n    if (isNumberLike && returnValue.indexOf('.') === -1) {\n        return `${returnValue}.0`;\n    }\n    else {\n        // If the input already contains a decimal, just return the value\n        return returnValue;\n    }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;CAWC;;;AACM,SAAS,gBAAgB,KAAK;IACjC,2BAA2B;IAC3B,4FAA4F;IAC5F,MAAM,cAAc,MAAM,QAAQ;IAClC,mDAAmD;IACnD,IAAI,YAAY,KAAK,CAAC,YAAY;QAC9B,OAAO;IACX;IACA,+EAA+E;IAC/E,uBAAuB;IACvB,IAAI,YAAY,MAAM,GAAG,KAAK,WAAW,CAAC,EAAE,KAAK,KAAK;QAClD,OAAO;IACX;IACA,uEAAuE;IACvE,MAAM,eAAe,CAAC,MAAM,WAAW,iBAAiB,YAAY,OAAO,CAAC,SAAS,CAAC;IACtF,4EAA4E;IAC5E,IAAI,gBAAgB,YAAY,OAAO,CAAC,SAAS,CAAC,GAAG;QACjD,OAAO,GAAG,YAAY,EAAE,CAAC;IAC7B,OACK;QACD,iEAAiE;QACjE,OAAO;IACX;AACJ","ignoreList":[0]}},
    {"offset": {"line": 1682, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1688, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/actions/resize/ResizeSimpleAction.js"],"sourcesContent":["import { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { Action } from \"../../internal/Action.js\";\nimport { toFloatAsString } from \"../../internal/utils/toFloatAsString.js\";\nimport { AspectRatioQualifierValue } from \"../../qualifiers/aspectRatio/AspectRatioQualifierValue.js\";\nimport { ignoreInitialAspectRatio, regionRelative, relative } from \"../../qualifiers/flag.js\";\nimport { FlagQualifier } from \"../../qualifiers/flag/FlagQualifier.js\";\nimport { ACTION_TYPE_TO_CROP_MODE_MAP, CROP_MODE_TO_ACTION_TYPE_MAP } from \"../../internal/internalConstants.js\";\n/**\n * @description Defines a resize using width and height.\n * @extends SDK.Action\n * @memberOf Actions.Resize\n * @see Visit {@link Actions.Resize| Resize} for examples\n */\nclass ResizeSimpleAction extends Action {\n    /**\n     * @param {string} cropType\n     * @param {number | string} cropWidth The required width of a transformed asset.\n     * @param {number | string} cropHeight The required height of a transformed asset.\n     */\n    constructor(cropType, cropWidth, cropHeight) {\n        super();\n        this._actionModel = { dimensions: {} };\n        this._actionModel.actionType = CROP_MODE_TO_ACTION_TYPE_MAP[cropType] || cropType;\n        this.addQualifier(new Qualifier('c', cropType));\n        cropWidth && this.width(cropWidth);\n        cropHeight && this.height(cropHeight);\n    }\n    /**\n     * @description Sets the height of the resize\n     * @param {string | number} x The height in pixels (if an integer is specified) or as a percentage (if a float is specified).\n     */\n    height(x) {\n        this._actionModel.dimensions.height = x;\n        return this.addQualifier(new Qualifier('h', x));\n    }\n    /**\n     * @description Sets the width of the resize\n     * @param {string | number} x The width in pixels (if an integer is specified) or as a percentage (if a float is specified).\n     */\n    width(x) {\n        this._actionModel.dimensions.width = x;\n        return this.addQualifier(new Qualifier('w', x));\n    }\n    /**\n     * @description Sets the aspect ratio of the asset.\n     * For a list of supported types see {@link Qualifiers.AspectRatio|\n      * AspectRatio values}\n     * @param {AspectRatioType|number|string} ratio The new aspect ratio, specified as a percentage or ratio.\n     * @return {this}\n     */\n    aspectRatio(ratio) {\n        // toFloatAsString is used to ensure 1 turns into 1.0\n        if (ratio instanceof AspectRatioQualifierValue) {\n            this._actionModel.dimensions.aspectRatio = `${ratio}`;\n            return this.addQualifier(new Qualifier('ar', ratio));\n        }\n        if (typeof ratio === 'number' || typeof ratio === 'string') {\n            this._actionModel.dimensions.aspectRatio = toFloatAsString(ratio);\n            return this.addQualifier(new Qualifier('ar', toFloatAsString(ratio)));\n        }\n        if (ratio instanceof FlagQualifier) {\n            this._actionModel.dimensions.aspectRatio = `${ratio.qualifierValue}`;\n            return this.addFlag(ratio);\n        }\n    }\n    /**\n     * @description Modifies percentage-based width & height parameters of overlays and underlays (e.g., 1.0) to be relative to the containing image instead of the added layer.\n     * @return {this}\n     */\n    relative() {\n        this._actionModel.relative = true;\n        return this.addFlag(relative());\n    }\n    /**\n     * @description Modifies percentage-based width & height parameters of overlays and underlays (e.g., 1.0) to be relative to the overlaid region\n     * @return {this}\n     */\n    regionRelative() {\n        this._actionModel.regionRelative = true;\n        return this.addFlag(regionRelative());\n    }\n    static fromJson(actionModel) {\n        const { actionType, dimensions, relative, regionRelative } = actionModel;\n        const { aspectRatio, width, height } = dimensions;\n        const cropMode = ACTION_TYPE_TO_CROP_MODE_MAP[actionType] || actionType;\n        // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n        // This allows the inheriting classes to determine the class to be created\n        const result = new this(cropMode, width, height);\n        aspectRatio && result.aspectRatio(aspectRatio === 'ignore_aspect_ratio' ? ignoreInitialAspectRatio() : aspectRatio);\n        relative && result.relative();\n        regionRelative && result.regionRelative();\n        return result;\n    }\n}\nexport { ResizeSimpleAction };\n"],"names":[],"mappings":";;;AAMA;AANA;AAGA;AAEA;AAHA;AAEA;AAHA;;;;;;;;AAMA;;;;;CAKC,GACD,MAAM,2BAA2B,yLAAA,CAAA,SAAM;IACnC;;;;KAIC,GACD,YAAY,QAAQ,EAAE,SAAS,EAAE,UAAU,CAAE;QACzC,KAAK;QACL,IAAI,CAAC,YAAY,GAAG;YAAE,YAAY,CAAC;QAAE;QACrC,IAAI,CAAC,YAAY,CAAC,UAAU,GAAG,oMAAA,CAAA,+BAA4B,CAAC,SAAS,IAAI;QACzE,IAAI,CAAC,YAAY,CAAC,IAAI,yMAAA,CAAA,YAAS,CAAC,KAAK;QACrC,aAAa,IAAI,CAAC,KAAK,CAAC;QACxB,cAAc,IAAI,CAAC,MAAM,CAAC;IAC9B;IACA;;;KAGC,GACD,OAAO,CAAC,EAAE;QACN,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM,GAAG;QACtC,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,yMAAA,CAAA,YAAS,CAAC,KAAK;IAChD;IACA;;;KAGC,GACD,MAAM,CAAC,EAAE;QACL,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,GAAG;QACrC,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,yMAAA,CAAA,YAAS,CAAC,KAAK;IAChD;IACA;;;;;;KAMC,GACD,YAAY,KAAK,EAAE;QACf,qDAAqD;QACrD,IAAI,iBAAiB,6NAAA,CAAA,4BAAyB,EAAE;YAC5C,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,WAAW,GAAG,GAAG,OAAO;YACrD,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,yMAAA,CAAA,YAAS,CAAC,MAAM;QACjD;QACA,IAAI,OAAO,UAAU,YAAY,OAAO,UAAU,UAAU;YACxD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,WAAW,GAAG,CAAA,GAAA,2MAAA,CAAA,kBAAe,AAAD,EAAE;YAC3D,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,yMAAA,CAAA,YAAS,CAAC,MAAM,CAAA,GAAA,2MAAA,CAAA,kBAAe,AAAD,EAAE;QACjE;QACA,IAAI,iBAAiB,0MAAA,CAAA,gBAAa,EAAE;YAChC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,WAAW,GAAG,GAAG,MAAM,cAAc,EAAE;YACpE,OAAO,IAAI,CAAC,OAAO,CAAC;QACxB;IACJ;IACA;;;KAGC,GACD,WAAW;QACP,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG;QAC7B,OAAO,IAAI,CAAC,OAAO,CAAC,CAAA,GAAA,yLAAA,CAAA,WAAQ,AAAD;IAC/B;IACA;;;KAGC,GACD,iBAAiB;QACb,IAAI,CAAC,YAAY,CAAC,cAAc,GAAG;QACnC,OAAO,IAAI,CAAC,OAAO,CAAC,CAAA,GAAA,yLAAA,CAAA,iBAAc,AAAD;IACrC;IACA,OAAO,SAAS,WAAW,EAAE;QACzB,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,cAAc,EAAE,GAAG;QAC7D,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG;QACvC,MAAM,WAAW,oMAAA,CAAA,+BAA4B,CAAC,WAAW,IAAI;QAC7D,mGAAmG;QACnG,0EAA0E;QAC1E,MAAM,SAAS,IAAI,IAAI,CAAC,UAAU,OAAO;QACzC,eAAe,OAAO,WAAW,CAAC,gBAAgB,wBAAwB,CAAA,GAAA,yLAAA,CAAA,2BAAwB,AAAD,MAAM;QACvG,YAAY,OAAO,QAAQ;QAC3B,kBAAkB,OAAO,cAAc;QACvC,OAAO;IACX;AACJ","ignoreList":[0]}},
    {"offset": {"line": 1788, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1794, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/actions/resize/ResizeScaleAction.js"],"sourcesContent":["import { ResizeSimpleAction } from \"./ResizeSimpleAction.js\";\nimport { GravityQualifier } from \"../../qualifiers/gravity/GravityQualifier.js\";\n/**\n * @description Defines a scaling resize action.\n * @extends Actions.Resize.ResizeSimpleAction\n * @memberOf Actions.Resize\n * @see Visit {@link Actions.Resize| Resize} for examples\n */\nclass ResizeScaleAction extends ResizeSimpleAction {\n    /**\n     * @description Changes the aspect ratio of an image while retaining all important content and avoiding unnatural\n     * distortions.\n     * @return {this}\n     */\n    liquidRescaling() {\n        return this.addQualifier(new GravityQualifier('liquid'));\n    }\n}\nexport { ResizeScaleAction };\n"],"names":[],"mappings":";;;AACA;AADA;;;AAEA;;;;;CAKC,GACD,MAAM,0BAA0B,8MAAA,CAAA,qBAAkB;IAC9C;;;;KAIC,GACD,kBAAkB;QACd,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,gNAAA,CAAA,mBAAgB,CAAC;IAClD;AACJ","ignoreList":[0]}},
    {"offset": {"line": 1816, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1822, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/qualifiers/gravity/autoGravity/AutoGravity.js"],"sourcesContent":["import { GravityQualifier } from \"../GravityQualifier.js\";\n/**\n * @description The class for the autoGravity builder\n * @memberOf Qualifiers.Gravity\n * @extends {Qualifiers.Gravity.GravityQualifier}\n */\nclass AutoGravity extends GravityQualifier {\n    constructor() {\n        // Required due to https://github.com/microsoft/TypeScript/issues/13029\n        /* istanbul ignore next */\n        super('auto');\n    }\n    /**\n     * @description Autofocuses on objects, allowing their priority within the algorithm to be configured.\n     * @param {AutoFocus} AutoFocusObjects\n     */\n    autoFocus(...AutoFocusObjects) {\n        this.addValue(AutoFocusObjects);\n        return this;\n    }\n}\nexport { AutoGravity };\n"],"names":[],"mappings":";;;AAAA;;AACA;;;;CAIC,GACD,MAAM,oBAAoB,gNAAA,CAAA,mBAAgB;IACtC,aAAc;QACV,uEAAuE;QACvE,wBAAwB,GACxB,KAAK,CAAC;IACV;IACA;;;KAGC,GACD,UAAU,GAAG,gBAAgB,EAAE;QAC3B,IAAI,CAAC,QAAQ,CAAC;QACd,OAAO,IAAI;IACf;AACJ","ignoreList":[0]}},
    {"offset": {"line": 1845, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1851, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/qualifiers/gravity/compassGravity/CompassGravity.js"],"sourcesContent":["import { GravityQualifier } from \"../GravityQualifier.js\";\n/**\n * @description The class for the CompassGravity builder\n * @memberOf Qualifiers.Gravity\n * @extends {Qualifiers.Gravity.GravityQualifier}\n */\nclass CompassGravity extends GravityQualifier {\n    constructor(dir) {\n        // Required due to https://github.com/microsoft/TypeScript/issues/13029\n        /* istanbul ignore next */\n        super(dir);\n    }\n}\nexport { CompassGravity };\n"],"names":[],"mappings":";;;AAAA;;AACA;;;;CAIC,GACD,MAAM,uBAAuB,gNAAA,CAAA,mBAAgB;IACzC,YAAY,GAAG,CAAE;QACb,uEAAuE;QACvE,wBAAwB,GACxB,KAAK,CAAC;IACV;AACJ","ignoreList":[0]}},
    {"offset": {"line": 1867, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1873, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/qualifiers/gravity/focusOnGravity/FocusOnGravity.js"],"sourcesContent":["import { GravityQualifier } from \"../GravityQualifier.js\";\n/**\n * @description The class for the FocusOn builder\n * @memberOf Qualifiers.Gravity\n * @extends {Qualifiers.Gravity.GravityQualifier}\n */\nclass FocusOnGravity extends GravityQualifier {\n    constructor(FocusOnObjects) {\n        // Required due to https://github.com/microsoft/TypeScript/issues/13029\n        /* istanbul ignore next */\n        super(FocusOnObjects);\n    }\n    /**\n     * @description Specifies the gravity to use if none of the other gravity objects are found.\n     * @param {Qualifiers.Gravity.AutoGravity} val\n     */\n    fallbackGravity(val) {\n        /*\n         *  FocusOnGravity(this) is already a qualifier, with a key and a value g_{obj1}\n         *  fallBackGravity also attempts to add a value, to reach the result of g_{obj1}:auto:{obj2}\n         *  Since AutoGravity is a Qualifier, it also comes with its own g_ key, which needs to be removed.\n         *  To solve it, we take only the value from the qualifier, instead of the whole thing\n         */\n        this.addValue(val.qualifierValue);\n        return this;\n    }\n}\nexport { FocusOnGravity };\n"],"names":[],"mappings":";;;AAAA;;AACA;;;;CAIC,GACD,MAAM,uBAAuB,gNAAA,CAAA,mBAAgB;IACzC,YAAY,cAAc,CAAE;QACxB,uEAAuE;QACvE,wBAAwB,GACxB,KAAK,CAAC;IACV;IACA;;;KAGC,GACD,gBAAgB,GAAG,EAAE;QACjB;;;;;SAKC,GACD,IAAI,CAAC,QAAQ,CAAC,IAAI,cAAc;QAChC,OAAO,IAAI;IACf;AACJ","ignoreList":[0]}},
    {"offset": {"line": 1901, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1907, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/qualifiers/gravity/xyCenterGravity/XYCenterGravity.js"],"sourcesContent":["import { GravityQualifier } from \"../GravityQualifier.js\";\n/**\n * @description The class for the XYCenter Gravity builder\n * @memberOf Qualifiers.Gravity\n * @extends {Qualifiers.Gravity.GravityQualifier}\n */\nclass XYCenterGravity extends GravityQualifier {\n    constructor() {\n        // Required due to https://github.com/microsoft/TypeScript/issues/13029\n        /* istanbul ignore next */\n        super('xy_center');\n    }\n}\nexport { XYCenterGravity };\n"],"names":[],"mappings":";;;AAAA;;AACA;;;;CAIC,GACD,MAAM,wBAAwB,gNAAA,CAAA,mBAAgB;IAC1C,aAAc;QACV,uEAAuE;QACvE,wBAAwB,GACxB,KAAK,CAAC;IACV;AACJ","ignoreList":[0]}},
    {"offset": {"line": 1923, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1929, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/qualifiers/gravity.js"],"sourcesContent":["import { CompassGravity } from \"./gravity/compassGravity/CompassGravity.js\";\nimport { FocusOnGravity } from \"./gravity/focusOnGravity/FocusOnGravity.js\";\nimport { AutoGravity } from \"./gravity/autoGravity/AutoGravity.js\";\nimport { XYCenterGravity } from \"./gravity/xyCenterGravity/XYCenterGravity.js\";\n/**\n * @description Defines the gravity based on directional values from a compass.\n * <b>Learn more:</b> {@link https://cloudinary.com/documentation/resizing_and_cropping#control_gravity|Control gravity for images}\n * <b>Learn more:</b> {@link https://cloudinary.com/documentation/video_resizing_and_cropping#control_gravity|Control gravity for videos}\n * @param {Qualifiers.Compass | string} direction A compass Values\n * @memberOf Qualifiers.Gravity\n * @example\n * import {Cloudinary} from \"@cloudinary/url-gen\";\n * import {compass} from \"@cloudinary/url-gen/qualifiers/gravity\";\n * import {north} from \"@cloudinary/url-gen/qualifiers/compass\";\n * import {crop} from \"@cloudinary/url-gen/actions/resize\";\n *\n * const yourCldInstance = new Cloudinary({cloud: {cloudName: 'demo'}});\n * const image = yourCldInstance.image('woman');\n * image.resize(crop().width(300).gravity(compass(north())))\n * @return {CompassGravity}\n */\nfunction compass(direction) {\n    return new CompassGravity(direction);\n}\n/**\n * @summary qualifier\n * @description Specifies what to focus on, for example: faces, objects, eyes, etc.\n * @param {...Qualifier.FocusOn} args One or more objects to focus on\n * @memberOf Qualifiers.Gravity\n * @example\n * import {Cloudinary} from \"@cloudinary/url-gen\";\n * import {focusOn} from \"@cloudinary/url-gen/qualifiers/gravity\";\n * import {crop} from \"@cloudinary/url-gen/actions/resize\";\n * import {cat} from \"@cloudinary/url-gen/qualifiers/focusOn\";\n *\n * const yourCldInstance = new Cloudinary({cloud: {cloudName: 'demo'}});\n * const image = yourCldInstance.image('woman');\n * image.resize(crop().width(300).gravity(focusOn(cat())))\n * @return {FocusOnGravity}\n */\nfunction focusOn(...args) {\n    const res = [...args];\n    return new FocusOnGravity(res);\n}\n/**\n * @summary qualifier\n * @description Automatically identifies the most interesting regions in the asset, can be qualified further by including what to focus on.\n * @memberOf Qualifiers.Gravity\n * @return {Qualifiers.Gravity.AutoGravity}\n * @example\n * import {Cloudinary} from \"@cloudinary/url-gen\";\n * import {autoGravity} from \"@cloudinary/url-gen/qualifiers/gravity\";\n * import {crop} from \"@cloudinary/url-gen/actions/resize\";\n *\n * const yourCldInstance = new Cloudinary({cloud: {cloudName: 'demo'}});\n * const image = yourCldInstance.image('woman');\n * image.resize(crop().width(300).gravity(autoGravity()))\n * @example\n * import {Cloudinary} from \"@cloudinary/url-gen\";\n * import {autoGravity} from \"@cloudinary/url-gen/qualifiers/gravity\";\n * import {crop} from \"@cloudinary/url-gen/actions/resize\";\n * import {cat} from \"@cloudinary/url-gen/qualifiers/focusOn\";\n * import {AutoFocus} from \"@cloudinary/url-gen/qualifiers/autoFocus\";\n *\n * const yourCldInstance = new Cloudinary({cloud: {cloudName: 'demo'}});\n * const image = yourCldInstance.image('woman');\n * image.resize(crop().width(300).gravity(autoGravity().autoFocus(AutoFocus.focusOn(cat()))))\n */\nfunction autoGravity() {\n    return new AutoGravity();\n}\n/**\n * @summary qualifier\n * @description Set the center of gravity to the given x & y coordinates.\n * @memberOf Qualifiers.Gravity\n * @return {XYCenterGravity}\n */\nfunction xyCenter() {\n    return new XYCenterGravity();\n}\n/**\n * @description A qualifier that determines which part of an asset to focus on, and thus which part of the asset to keep, </br>\n *              when any part of the asset is cropped. For overlays, this setting determines where to place the overlay.\n * @namespace Gravity\n * @memberOf Qualifiers\n * @example\n * import {Cloudinary} from \"@cloudinary/url-gen\";\n * import {compass} from \"@cloudinary/url-gen/qualifiers/gravity\";\n * import {north} from \"@cloudinary/url-gen/qualifiers/compass\";\n * import {crop} from \"@cloudinary/url-gen/actions/resize\";\n *\n * const yourCldInstance = new Cloudinary({cloud: {cloudName: 'demo'}});\n * const image = yourCldInstance.image('woman');\n * image.resize(crop().width(300).gravity(compass(north())))\n *\n * // Expand every function separately to see its own example\n */\nconst Gravity = {\n    compass: compass,\n    autoGravity: autoGravity,\n    focusOn: focusOn,\n    xyCenter\n};\nexport { Gravity, compass, autoGravity, focusOn, xyCenter };\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;;;;;AACA;;;;;;;;;;;;;;;;CAgBC,GACD,SAAS,QAAQ,SAAS;IACtB,OAAO,IAAI,gOAAA,CAAA,iBAAc,CAAC;AAC9B;AACA;;;;;;;;;;;;;;;CAeC,GACD,SAAS,QAAQ,GAAG,IAAI;IACpB,MAAM,MAAM;WAAI;KAAK;IACrB,OAAO,IAAI,gOAAA,CAAA,iBAAc,CAAC;AAC9B;AACA;;;;;;;;;;;;;;;;;;;;;;;CAuBC,GACD,SAAS;IACL,OAAO,IAAI,0NAAA,CAAA,cAAW;AAC1B;AACA;;;;;CAKC,GACD,SAAS;IACL,OAAO,IAAI,kOAAA,CAAA,kBAAe;AAC9B;AACA;;;;;;;;;;;;;;;;CAgBC,GACD,MAAM,UAAU;IACZ,SAAS;IACT,aAAa;IACb,SAAS;IACT;AACJ","ignoreList":[0]}},
    {"offset": {"line": 2041, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2047, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/qualifiers/gravity/qualifiers/focusOn/FocusOnValue.js"],"sourcesContent":["import { QualifierValue } from \"../../../../internal/qualifier/QualifierValue.js\";\n/**\n * @memberOf Qualifiers.FocusOn\n * @extends {SDK.QualifierValue}\n */\nclass FocusOnValue extends QualifierValue {\n    constructor(name) {\n        super();\n        this.name = name;\n    }\n    toString() {\n        return this.name;\n    }\n}\nexport { FocusOnValue };\n"],"names":[],"mappings":";;;AAAA;;AACA;;;CAGC,GACD,MAAM,qBAAqB,8MAAA,CAAA,iBAAc;IACrC,YAAY,IAAI,CAAE;QACd,KAAK;QACL,IAAI,CAAC,IAAI,GAAG;IAChB;IACA,WAAW;QACP,OAAO,IAAI,CAAC,IAAI;IACpB;AACJ","ignoreList":[0]}},
    {"offset": {"line": 2065, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2071, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/internal/models/createGravityModel.js"],"sourcesContent":["import { AutoGravity } from \"../../qualifiers/gravity/autoGravity/AutoGravity.js\";\nimport { FocusOnGravity } from \"../../qualifiers/gravity/focusOnGravity/FocusOnGravity.js\";\nimport { autoGravity } from \"../../qualifiers/gravity.js\";\nimport { FocusOnValue } from \"../../qualifiers/focusOn.js\";\n/**\n * true if gravity starts with 'auto' or 'auto:'\n * @param gravity\n */\nfunction isIAutoGravityString(gravity) {\n    return gravity && `${gravity}`.split(':')[0] === 'auto';\n}\n/**\n * Validate that given val is an ICompassGravity\n * @param gravity\n */\nfunction isCompassGravity(gravity) {\n    //const gravityString = `${(typeof gravity === \"string\" ? gravity : gravity.qualifierValue)}`;\n    const gravityValue = getGravityValue(gravity);\n    return ['north', 'center', 'east', 'west', 'south', 'north_west', 'south_east', 'south_west', 'north_east'].includes(gravityValue);\n}\n/**\n * Get the value of given gravity\n * @param gravity\n */\nfunction getGravityValue(gravity) {\n    return `${gravity}`.replace('g_', '');\n}\n/**\n * Creates a compassGravity model\n * @param gravity\n */\nfunction createCompassGravityModel(gravity) {\n    return {\n        compass: getGravityValue(gravity),\n        gravityType: 'direction'\n    };\n}\n/**\n * Validate that given gravity is an instance of ocr gravity\n * @param gravity\n */\nfunction isOcrGravity(gravity) {\n    return getGravityValue(gravity) === 'ocr_text';\n}\n/**\n * Creates an ocr gravity model\n */\nfunction createOcrGravityModel() {\n    return {\n        gravityType: 'ocr'\n    };\n}\n/**\n * Validate that given gravity is an instance of AutoGravity\n * @param gravity\n */\nfunction isAutoGravity(gravity) {\n    return `${gravity.qualifierValue}`.split(':')[0] === 'auto';\n}\n/**\n * Create an instance of IAutoGravityObjectModel\n * @param gravity\n */\nfunction createIAutoFocusObject(gravity) {\n    const gravityString = gravity.toString();\n    const values = gravityString.split('_');\n    const result = {\n        object: values[0]\n    };\n    if (values.length > 1) {\n        if (values[1] === 'avoid') {\n            result.avoid = true;\n        }\n        else {\n            result.weight = +values[1];\n        }\n    }\n    return result;\n}\n/**\n * Creates an auto gravity model from given AutoGravity\n * @param gravity\n */\nfunction createAutoGravityModel(gravity) {\n    let values;\n    const gravityQualifier = gravity === 'auto' ? new AutoGravity() : gravity;\n    if (`${gravity}`.startsWith('auto:')) {\n        values = `${gravity}`.split(':').filter((v) => v !== 'auto');\n    }\n    else {\n        values = gravityQualifier.qualifierValue.values.filter((v) => v !== 'auto');\n    }\n    const autoFocus = values.map(createIAutoFocusObject);\n    return {\n        gravityType: 'auto',\n        autoFocus\n    };\n}\n/**\n * Create IFocusOnGravityModel from FocusOnGravity\n * @param gravity\n */\nfunction createFocusOnGravityModel(gravity) {\n    const hasAutoGravity = `${gravity}`.split(':').includes('auto');\n    const values = gravity.qualifierValue.values;\n    const focusOnValues = hasAutoGravity ? values.slice(0, values.length - 1) : values;\n    const result = {\n        gravityType: 'object',\n        focusOnObjects: focusOnValues.map((v) => `${v}`)\n    };\n    if (hasAutoGravity) {\n        // Remove the first 'auto' value by slicing it, because it's added by autoGravity()\n        const autoFocusObjects = values[values.length - 1].values.slice(1);\n        const autoGravityInstance = autoGravity().autoFocus(...autoFocusObjects);\n        result.fallbackGravity = createAutoGravityModel(autoGravityInstance);\n    }\n    return result;\n}\n/**\n * Creates a FocusOnGravity from given string\n * @param gravity\n */\nfunction createFocusOnGravity(gravity) {\n    const values = gravity.split(':');\n    const focusOnValues = values.map((g) => new FocusOnValue(g));\n    return new FocusOnGravity(focusOnValues);\n}\n/**\n * Create a model of given gravity\n * @param gravity\n */\nexport function createGravityModel(gravity) {\n    if (isCompassGravity(gravity)) {\n        return createCompassGravityModel(gravity);\n    }\n    if (isOcrGravity(gravity)) {\n        return createOcrGravityModel();\n    }\n    if (isIAutoGravityString(gravity) || isAutoGravity(gravity)) {\n        return createAutoGravityModel(gravity);\n    }\n    return createFocusOnGravityModel(typeof gravity === 'string' ? createFocusOnGravity(gravity) : gravity);\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2214, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2220, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/qualifiers/autoFocus.js"],"sourcesContent":["import { QualifierValue } from \"../internal/qualifier/QualifierValue.js\";\nimport { FocusOnValue } from \"./focusOn.js\";\n/**\n * @summary qualifier\n * @namespace AutoFocus\n * @memberOf Qualifiers\n * @see Visit {@link Qualifiers.Gravity|Gravity} for an example\n */\n/**\n * @memberOf Qualifiers.AutoFocus\n * @extends {SDK.QualifierValue}\n * @see Visit {@link Qualifiers.Gravity|Gravity} for an example\n */\nclass AutoFocus extends QualifierValue {\n    constructor(focusOn, weight) {\n        super();\n        this._weight = weight;\n        this.focusOn = focusOn;\n        this.shouldAvoid = false;\n    }\n    /**\n     * @summary qualifier\n     * @description Specifies the object to focus on automatically\n     * Accepts an AutoFocusObject (which is just a wrapper for a FocusOn object, but with extra method: avoid, weight)\n     * @param {Qualifiers.FocusOn} obj The object to focus on.\n     * @param {number} weight\n     */\n    static focusOn(obj, weight) {\n        const focusOn = obj instanceof FocusOnValue ? obj : new FocusOnValue(obj);\n        return new AutoFocus(focusOn, weight);\n    }\n    shouldAddWeight() {\n        return typeof this._weight === 'number' || typeof this._weight === 'string' || this.shouldAvoid;\n    }\n    /**\n     * @summary qualifier\n     * @desc Get the name of the of the object\n     */\n    getName() {\n        return this.focusOn.name;\n    }\n    /**\n     * @summary qualifier\n     * @desc Get the weight for the object\n     */\n    getWeight() {\n        if (this.shouldAvoid) {\n            return 'avoid';\n        }\n        else {\n            return this._weight;\n        }\n    }\n    /**\n     * @summary qualifier\n     * @desc Return the string representation of this QualifierValue\n     */\n    toString() {\n        // Future proofing, in case we'd like to support some custom string in the future, or if data is coming from a DB\n        if (this.shouldAddWeight()) {\n            return `${this.getName()}_${this.getWeight()}`;\n        }\n        else {\n            return `${this.getName()}`;\n        }\n    }\n    /**\n     * @summary qualifier\n     * @description Sets the importance level of the object within the automatic gravity algorithm\n     * @param {numebr} w The focus weight for the object\n     * @return {this}\n     */\n    weight(w) {\n        this._weight = w;\n        return this;\n    }\n    /**\n     * @summary qualifier\n     * @description Attempts to avoid the detected object in the image\n     * @return {this}\n     */\n    avoid() {\n        this.shouldAvoid = true;\n        return this;\n    }\n}\nconst focusOn = AutoFocus.focusOn;\nexport { AutoFocus, focusOn };\n"],"names":[],"mappings":";;;;AACA;AADA;;;AAEA;;;;;CAKC,GACD;;;;CAIC,GACD,MAAM,kBAAkB,8MAAA,CAAA,iBAAc;IAClC,YAAY,OAAO,EAAE,MAAM,CAAE;QACzB,KAAK;QACL,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,WAAW,GAAG;IACvB;IACA;;;;;;KAMC,GACD,OAAO,QAAQ,GAAG,EAAE,MAAM,EAAE;QACxB,MAAM,UAAU,eAAe,qOAAA,CAAA,eAAY,GAAG,MAAM,IAAI,qOAAA,CAAA,eAAY,CAAC;QACrE,OAAO,IAAI,UAAU,SAAS;IAClC;IACA,kBAAkB;QACd,OAAO,OAAO,IAAI,CAAC,OAAO,KAAK,YAAY,OAAO,IAAI,CAAC,OAAO,KAAK,YAAY,IAAI,CAAC,WAAW;IACnG;IACA;;;KAGC,GACD,UAAU;QACN,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI;IAC5B;IACA;;;KAGC,GACD,YAAY;QACR,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,OAAO;QACX,OACK;YACD,OAAO,IAAI,CAAC,OAAO;QACvB;IACJ;IACA;;;KAGC,GACD,WAAW;QACP,iHAAiH;QACjH,IAAI,IAAI,CAAC,eAAe,IAAI;YACxB,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,CAAC,EAAE,IAAI,CAAC,SAAS,IAAI;QAClD,OACK;YACD,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI;QAC9B;IACJ;IACA;;;;;KAKC,GACD,OAAO,CAAC,EAAE;QACN,IAAI,CAAC,OAAO,GAAG;QACf,OAAO,IAAI;IACf;IACA;;;;KAIC,GACD,QAAQ;QACJ,IAAI,CAAC,WAAW,GAAG;QACnB,OAAO,IAAI;IACf;AACJ;AACA,MAAM,UAAU,UAAU,OAAO","ignoreList":[0]}},
    {"offset": {"line": 2304, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2310, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/qualifiers/focusOn.js"],"sourcesContent":["import { FocusOnValue } from \"./gravity/qualifiers/focusOn/FocusOnValue.js\";\n/**\n * @summary qualifier\n * @memberOf Qualifiers.FocusOn\n * @description Detects birds\n * @return {Qualifiers.FocusOn.FocusOnValue} FocusOnValue\n */\nfunction bird() {\n    return new FocusOnValue('bird');\n}\n/**\n * @summary qualifier\n * @description Detects dogs\n * @return {Qualifiers.FocusOn.FocusOnValue} FocusOnValue\n */\nfunction dog() {\n    return new FocusOnValue('dog');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.FocusOn\n * @description Detects cats\n * @return {Qualifiers.FocusOn.FocusOnValue} FocusOnValue\n */\nfunction cat() {\n    return new FocusOnValue('cat');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.FocusOn\n * @description Detects microwaves\n * @return {Qualifiers.FocusOn.FocusOnValue} FocusOnValue\n */\nfunction microwave() {\n    return new FocusOnValue('microwave');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.FocusOn\n * @description Detects refrigerators\n * @return {Qualifiers.FocusOn.FocusOnValue} FocusOnValue\n */\nfunction refrigerator() {\n    return new FocusOnValue('refrigerator');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.FocusOn\n * @description Detects bottles\n * @return {Qualifiers.FocusOn.FocusOnValue} FocusOnValue\n */\nfunction bottle() {\n    return new FocusOnValue('bottle');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.FocusOn\n * @description Detects sinks\n * @return {Qualifiers.FocusOn.FocusOnValue} FocusOnValue\n */\nfunction sink() {\n    return new FocusOnValue('sink');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.FocusOn\n * @description Detects skateboards\n * @return {Qualifiers.FocusOn.FocusOnValue} FocusOnValue\n */\nfunction skateboard() {\n    return new FocusOnValue('skateboard');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.FocusOn\n * @description Detects people\n * @return {Qualifiers.FocusOn.FocusOnValue} FocusOnValue\n */\nfunction person() {\n    return new FocusOnValue('person');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.FocusOn\n * @description Detects the largest face in an image with the Advanced Facial Attribute Detection add-on and makes it the focus of the transformation.\n * @return {Qualifiers.FocusOn.FocusOnValue} FocusOnValue\n */\nfunction advancedFace() {\n    return new FocusOnValue('adv_face');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.FocusOn\n * @description Detects all faces in an image with the Advanced Facial Attribute Detection add-on and makes them the focus of the transformation.\n * @return {Qualifiers.FocusOn.FocusOnValue} FocusOnValue\n */\nfunction advancedFaces() {\n    return new FocusOnValue('adv_faces');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.FocusOn\n * @description Detects all eyes in an image with the Advanced Facial Attribute Detection add-on and makes them the focus of the transformation.\n * @return {Qualifiers.FocusOn.FocusOnValue} FocusOnValue\n */\nfunction advancedEyes() {\n    return new FocusOnValue('adv_eyes');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.FocusOn\n * @description Detects the largest face in the asset and makes it the focus of the transformation.\n * @return {Qualifiers.FocusOn.FocusOnValue} FocusOnValue\n */\nfunction face() {\n    return new FocusOnValue('face');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.FocusOn\n * @description Detects all the faces in the asset and makes them the focus of the transformation.\n * @return {Qualifiers.FocusOn.FocusOnValue} FocusOnValue\n */\nfunction faces() {\n    return new FocusOnValue('faces');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.FocusOn\n * @description Detects all the faces in the asset and makes them the focus of the transformation.\n * @return {Qualifiers.FocusOn.FocusOnValue} FocusOnValue\n */\nfunction background() {\n    return new FocusOnValue('background');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.FocusOn\n * @description Detects aeroplane\n * @return {Qualifiers.FocusOn.FocusOnValue} FocusOnValue\n */\nfunction aeroplane() {\n    return new FocusOnValue('aeroplane');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.FocusOn\n * @description Detects bicycle\n * @return {Qualifiers.FocusOn.FocusOnValue} FocusOnValue\n */\nfunction bicycle() {\n    return new FocusOnValue('bicycle');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.FocusOn\n * @description Detects boat\n * @return {Qualifiers.FocusOn.FocusOnValue} FocusOnValue\n */\nfunction boat() {\n    return new FocusOnValue('boat');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.FocusOn\n * @description Detects bus\n * @return {Qualifiers.FocusOn.FocusOnValue} FocusOnValue\n */\nfunction bus() {\n    return new FocusOnValue('bus');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.FocusOn\n * @description Detects car\n * @return {Qualifiers.FocusOn.FocusOnValue} FocusOnValue\n */\nfunction car() {\n    return new FocusOnValue('car');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.FocusOn\n * @description Detects chair\n * @return {Qualifiers.FocusOn.FocusOnValue} FocusOnValue\n */\nfunction chair() {\n    return new FocusOnValue('chair');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.FocusOn\n * @description Detects cow\n * @return {Qualifiers.FocusOn.FocusOnValue} FocusOnValue\n */\nfunction cow() {\n    return new FocusOnValue('cow');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.FocusOn\n * @description Detects diningtable\n * @return {Qualifiers.FocusOn.FocusOnValue} FocusOnValue\n */\nfunction diningtable() {\n    return new FocusOnValue('diningtable');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.FocusOn\n * @description Detects horse\n * @return {Qualifiers.FocusOn.FocusOnValue} FocusOnValue\n */\nfunction horse() {\n    return new FocusOnValue('horse');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.FocusOn\n * @description Detects motorbike\n * @return {Qualifiers.FocusOn.FocusOnValue} FocusOnValue\n */\nfunction motorbike() {\n    return new FocusOnValue('motorbike');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.FocusOn\n * @description Detects pottedplant\n * @return {Qualifiers.FocusOn.FocusOnValue} FocusOnValue\n */\nfunction pottedplant() {\n    return new FocusOnValue('pottedplant');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.FocusOn\n * @description Detects sheep\n * @return {Qualifiers.FocusOn.FocusOnValue} FocusOnValue\n */\nfunction sheep() {\n    return new FocusOnValue('sheep');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.FocusOn\n * @description Detects sofa\n * @return {Qualifiers.FocusOn.FocusOnValue} FocusOnValue\n */\nfunction sofa() {\n    return new FocusOnValue('sofa');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.FocusOn\n * @description Detects train\n * @return {Qualifiers.FocusOn.FocusOnValue} FocusOnValue\n */\nfunction train() {\n    return new FocusOnValue('train');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.FocusOn\n * @description Detects tvmonitor\n * @return {Qualifiers.FocusOn.FocusOnValue} FocusOnValue\n */\nfunction tvmonitor() {\n    return new FocusOnValue('tvmonitor');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.FocusOn\n * @description Detect all text elements in an image using the {@link https://cloudinary.com/documentation/ocr_text_detection_and_extraction_addon|OCR Text Detection and Extraction add-on} and use the detected bounding box coordinates as the basis of the transformation.\n * @return {Qualifiers.FocusOn.FocusOnValue} FocusOnValue\n */\nfunction ocr() {\n    return new FocusOnValue('ocr_text');\n}\n/**\n * @memberOf Qualifiers\n * @namespace FocusOn\n * @see Visit {@link Qualifiers.Gravity|Gravity} for an example\n */\nconst FocusOn = {\n    person,\n    cat,\n    microwave,\n    refrigerator,\n    skateboard,\n    bird,\n    bottle,\n    dog,\n    sink,\n    face,\n    train,\n    sofa,\n    sheep,\n    pottedplant,\n    horse,\n    faces,\n    cow,\n    bus,\n    boat,\n    advancedEyes,\n    advancedFace,\n    advancedFaces,\n    aeroplane,\n    background,\n    bicycle,\n    car,\n    chair,\n    diningtable,\n    tvmonitor,\n    motorbike,\n    ocr\n};\nexport { FocusOnValue, FocusOn, person, cat, microwave, refrigerator, skateboard, bird, bottle, dog, sink, face, train, sofa, sheep, pottedplant, horse, faces, cow, bus, boat, advancedEyes, advancedFace, advancedFaces, aeroplane, background, bicycle, car, chair, diningtable, tvmonitor, motorbike, ocr };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2631, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2637, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/qualifiers/gravity/qualifiers/compass/CompassQualifier.js"],"sourcesContent":["import { QualifierValue } from \"../../../../internal/qualifier/QualifierValue.js\";\n/**\n * @memberOf Qualifiers.Compass\n * @extends {SDK.QualifierValue}\n */\nclass CompassQualifier extends QualifierValue {\n    constructor(val) {\n        super();\n        this.val = val;\n    }\n    toString() {\n        return this.val;\n    }\n}\nexport { CompassQualifier };\n"],"names":[],"mappings":";;;AAAA;;AACA;;;CAGC,GACD,MAAM,yBAAyB,8MAAA,CAAA,iBAAc;IACzC,YAAY,GAAG,CAAE;QACb,KAAK;QACL,IAAI,CAAC,GAAG,GAAG;IACf;IACA,WAAW;QACP,OAAO,IAAI,CAAC,GAAG;IACnB;AACJ","ignoreList":[0]}},
    {"offset": {"line": 2655, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2661, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/internal/models/createGravityFromModel.js"],"sourcesContent":["import { autoGravity, focusOn } from \"../../qualifiers/gravity.js\";\nimport { FocusOnValue, ocr } from \"../../qualifiers/focusOn.js\";\nimport { AutoFocus } from \"../../qualifiers/autoFocus.js\";\nimport { CompassGravity } from \"../../qualifiers/gravity/compassGravity/CompassGravity.js\";\nimport { CompassQualifier } from \"../../qualifiers/gravity/qualifiers/compass/CompassQualifier.js\";\n/**\n * Validates that gravityModel is an ICompassGravityModel\n * @param gravityModel\n */\nfunction isCompassGravityModel(gravityModel) {\n    return gravityModel.gravityType === 'direction';\n}\n/**\n * Validates that gravityModel is an IOcrGravityModel\n * @param gravityModel\n */\nfunction isOcrGravityModel(gravityModel) {\n    return gravityModel.gravityType === 'ocr';\n}\n/**\n * Validates that gravityModel is an IAutoGravityModel\n * @param gravityModel\n */\nfunction isAutoGravityModel(gravityModel) {\n    return gravityModel.gravityType === 'auto';\n}\n/**\n * Create AutoFocus from IAutoGravityObjectModel\n * @param autoGravityObjectModel\n */\nfunction createAutoFocusFromModel(autoGravityObjectModel) {\n    const { object, weight, avoid } = autoGravityObjectModel;\n    const autoFocus = new AutoFocus(new FocusOnValue(object));\n    (weight || weight === 0) && autoFocus.weight(weight);\n    avoid && autoFocus.avoid();\n    return autoFocus;\n}\n/**\n * Create AutoGravity from IAutoGravityModel\n * @param gravityModel\n */\nfunction createAutoGravityFromModel(gravityModel) {\n    const autoFocusModel = gravityModel.autoFocus || [];\n    const autoFocus = autoFocusModel.map(createAutoFocusFromModel);\n    return autoGravity().autoFocus(...autoFocus);\n}\n/**\n * Create FocusOnGravity from given IFocusOnGravityModel\n * @param gravityModel\n */\nfunction createFocusOnGravityFromModel(gravityModel) {\n    const focusOnObjects = (gravityModel.focusOnObjects || []).map((str) => new FocusOnValue(str));\n    const result = focusOn(...focusOnObjects);\n    if (gravityModel.fallbackGravity) {\n        const autoGravity = createAutoGravityFromModel(gravityModel.fallbackGravity);\n        result.fallbackGravity(autoGravity);\n    }\n    return result;\n}\n/**\n * Create gravity instance from given gravity model\n * @param gravityModel\n */\nfunction createGravityFromModel(gravityModel) {\n    if (isCompassGravityModel(gravityModel)) {\n        return new CompassGravity(new CompassQualifier(gravityModel.compass));\n    }\n    if (isOcrGravityModel(gravityModel)) {\n        return focusOn(ocr());\n    }\n    if (isAutoGravityModel(gravityModel)) {\n        return createAutoGravityFromModel(gravityModel);\n    }\n    return createFocusOnGravityFromModel(gravityModel);\n}\nexport { createGravityFromModel };\n"],"names":[],"mappings":";;;AAEA;AADA;AADA;AACA;AAEA;AACA;;;;;;AACA;;;CAGC,GACD,SAAS,sBAAsB,YAAY;IACvC,OAAO,aAAa,WAAW,KAAK;AACxC;AACA;;;CAGC,GACD,SAAS,kBAAkB,YAAY;IACnC,OAAO,aAAa,WAAW,KAAK;AACxC;AACA;;;CAGC,GACD,SAAS,mBAAmB,YAAY;IACpC,OAAO,aAAa,WAAW,KAAK;AACxC;AACA;;;CAGC,GACD,SAAS,yBAAyB,sBAAsB;IACpD,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG;IAClC,MAAM,YAAY,IAAI,8LAAA,CAAA,YAAS,CAAC,IAAI,qOAAA,CAAA,eAAY,CAAC;IACjD,CAAC,UAAU,WAAW,CAAC,KAAK,UAAU,MAAM,CAAC;IAC7C,SAAS,UAAU,KAAK;IACxB,OAAO;AACX;AACA;;;CAGC,GACD,SAAS,2BAA2B,YAAY;IAC5C,MAAM,iBAAiB,aAAa,SAAS,IAAI,EAAE;IACnD,MAAM,YAAY,eAAe,GAAG,CAAC;IACrC,OAAO,CAAA,GAAA,4LAAA,CAAA,cAAW,AAAD,IAAI,SAAS,IAAI;AACtC;AACA;;;CAGC,GACD,SAAS,8BAA8B,YAAY;IAC/C,MAAM,iBAAiB,CAAC,aAAa,cAAc,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,MAAQ,IAAI,qOAAA,CAAA,eAAY,CAAC;IACzF,MAAM,SAAS,CAAA,GAAA,4LAAA,CAAA,UAAO,AAAD,KAAK;IAC1B,IAAI,aAAa,eAAe,EAAE;QAC9B,MAAM,cAAc,2BAA2B,aAAa,eAAe;QAC3E,OAAO,eAAe,CAAC;IAC3B;IACA,OAAO;AACX;AACA;;;CAGC,GACD,SAAS,uBAAuB,YAAY;IACxC,IAAI,sBAAsB,eAAe;QACrC,OAAO,IAAI,gOAAA,CAAA,iBAAc,CAAC,IAAI,yOAAA,CAAA,mBAAgB,CAAC,aAAa,OAAO;IACvE;IACA,IAAI,kBAAkB,eAAe;QACjC,OAAO,CAAA,GAAA,4LAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,4MAAA,CAAA,MAAG,AAAD;IACrB;IACA,IAAI,mBAAmB,eAAe;QAClC,OAAO,2BAA2B;IACtC;IACA,OAAO,8BAA8B;AACzC","ignoreList":[0]}},
    {"offset": {"line": 2739, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2745, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/actions/resize/ResizeAdvancedAction.js"],"sourcesContent":["import { ResizeSimpleAction } from \"./ResizeSimpleAction.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { createGravityModel } from \"../../internal/models/createGravityModel.js\";\nimport { createGravityFromModel } from \"../../internal/models/createGravityFromModel.js\";\n/**\n * @description Defines an advanced resize.\n * @extends Actions.Resize.ResizeSimpleAction\n * @memberOf Actions.Resize\n * @see Visit {@link Actions.Resize| Resize} for examples\n */\nclass ResizeAdvancedAction extends ResizeSimpleAction {\n    /**\n     * @description Which part of the original image to include.\n     * @param {Qualifiers.Gravity} gravity\n     */\n    gravity(gravity) {\n        this._actionModel.gravity = createGravityModel(gravity);\n        const gravityQualifier = typeof gravity === \"string\" ? new Qualifier('g', gravity) : gravity;\n        return this.addQualifier(gravityQualifier);\n    }\n    static fromJson(actionModel) {\n        const result = super.fromJson.apply(this, [actionModel]);\n        if (actionModel.gravity) {\n            result.gravity(createGravityFromModel(actionModel.gravity));\n        }\n        return result;\n    }\n}\nexport { ResizeAdvancedAction };\n"],"names":[],"mappings":";;;AAEA;AADA;AAEA;AAHA;;;;;AAIA;;;;;CAKC,GACD,MAAM,6BAA6B,8MAAA,CAAA,qBAAkB;IACjD;;;KAGC,GACD,QAAQ,OAAO,EAAE;QACb,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,CAAA,GAAA,+MAAA,CAAA,qBAAkB,AAAD,EAAE;QAC/C,MAAM,mBAAmB,OAAO,YAAY,WAAW,IAAI,yMAAA,CAAA,YAAS,CAAC,KAAK,WAAW;QACrF,OAAO,IAAI,CAAC,YAAY,CAAC;IAC7B;IACA,OAAO,SAAS,WAAW,EAAE;QACzB,MAAM,SAAS,KAAK,CAAC,SAAS,KAAK,CAAC,IAAI,EAAE;YAAC;SAAY;QACvD,IAAI,YAAY,OAAO,EAAE;YACrB,OAAO,OAAO,CAAC,CAAA,GAAA,mNAAA,CAAA,yBAAsB,AAAD,EAAE,YAAY,OAAO;QAC7D;QACA,OAAO;IACX;AACJ","ignoreList":[0]}},
    {"offset": {"line": 2781, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2787, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/actions/resize/ResizeCropAction.js"],"sourcesContent":["import { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { ResizeAdvancedAction } from \"./ResizeAdvancedAction.js\";\n/**\n * @description Defines how to crop an asset\n * @extends Actions.Resize.ResizeAdvancedAction\n * @memberOf Actions.Resize\n * @see Visit {@link Actions.Resize| Resize} for examples\n */\nclass ResizeCropAction extends ResizeAdvancedAction {\n    /**\n     * @description Horizontal position for custom-coordinates based cropping.\n     * @param {number} x The x position.\n     */\n    x(x) {\n        this._actionModel.x = x;\n        return this.addQualifier(new Qualifier('x', x));\n    }\n    /**\n     * @description Vertical position for custom-coordinates based cropping\n     * @param {number} y The y position.\n     */\n    y(y) {\n        this._actionModel.y = y;\n        return this.addQualifier(new Qualifier('y', y));\n    }\n    /**\n     * @description Controls how much of the original image surrounding the face to keep when using either the 'crop' or 'thumb' cropping modes with face detection.\n     * @param {number | string} z The zoom factor. (Default: 1.0)\n     */\n    zoom(z) {\n        this._actionModel.zoom = z;\n        return this.addQualifier(new Qualifier('z', z));\n    }\n    static fromJson(actionModel) {\n        const result = super.fromJson.apply(this, [actionModel]);\n        actionModel.x && result.x(actionModel.x);\n        actionModel.y && result.y(actionModel.y);\n        actionModel.zoom && result.zoom(actionModel.zoom);\n        return result;\n    }\n}\nexport { ResizeCropAction };\n"],"names":[],"mappings":";;;AAAA;AACA;;;AACA;;;;;CAKC,GACD,MAAM,yBAAyB,gNAAA,CAAA,uBAAoB;IAC/C;;;KAGC,GACD,EAAE,CAAC,EAAE;QACD,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG;QACtB,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,yMAAA,CAAA,YAAS,CAAC,KAAK;IAChD;IACA;;;KAGC,GACD,EAAE,CAAC,EAAE;QACD,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG;QACtB,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,yMAAA,CAAA,YAAS,CAAC,KAAK;IAChD;IACA;;;KAGC,GACD,KAAK,CAAC,EAAE;QACJ,IAAI,CAAC,YAAY,CAAC,IAAI,GAAG;QACzB,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,yMAAA,CAAA,YAAS,CAAC,KAAK;IAChD;IACA,OAAO,SAAS,WAAW,EAAE;QACzB,MAAM,SAAS,KAAK,CAAC,SAAS,KAAK,CAAC,IAAI,EAAE;YAAC;SAAY;QACvD,YAAY,CAAC,IAAI,OAAO,CAAC,CAAC,YAAY,CAAC;QACvC,YAAY,CAAC,IAAI,OAAO,CAAC,CAAC,YAAY,CAAC;QACvC,YAAY,IAAI,IAAI,OAAO,IAAI,CAAC,YAAY,IAAI;QAChD,OAAO;IACX;AACJ","ignoreList":[0]}},
    {"offset": {"line": 2832, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2838, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/actions/resize/ResizeFillAction.js"],"sourcesContent":["import { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { ResizeAdvancedAction } from \"./ResizeAdvancedAction.js\";\n/**\n * @description Defines how to crop-fill an asset\n * @extends Actions.Resize.ResizeAdvancedAction\n * @memberOf Actions.Resize\n * @see Visit {@link Actions.Resize| Resize} for examples\n */\nclass ResizeFillAction extends ResizeAdvancedAction {\n    /**\n     * @description Absolute X position when used with Gravity.xyCenter {@link Qualifiers.Gravity.GravityQualifier}}\n     * @param {number} x The x position.\n     */\n    x(x) {\n        this._actionModel.x = x;\n        return this.addQualifier(new Qualifier('x', x));\n    }\n    /**\n     * @description Absolute Y position when used with Gravity.xyCenter {@link Qualifiers.Gravity.GravityQualifier}}\n     * @param {number} y The y position.\n     */\n    y(y) {\n        this._actionModel.y = y;\n        return this.addQualifier(new Qualifier('y', y));\n    }\n    static fromJson(actionModel) {\n        const result = super.fromJson.apply(this, [actionModel]);\n        actionModel.x && result.x(actionModel.x);\n        actionModel.y && result.y(actionModel.y);\n        return result;\n    }\n}\nexport { ResizeFillAction };\n"],"names":[],"mappings":";;;AAAA;AACA;;;AACA;;;;;CAKC,GACD,MAAM,yBAAyB,gNAAA,CAAA,uBAAoB;IAC/C;;;KAGC,GACD,EAAE,CAAC,EAAE;QACD,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG;QACtB,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,yMAAA,CAAA,YAAS,CAAC,KAAK;IAChD;IACA;;;KAGC,GACD,EAAE,CAAC,EAAE;QACD,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG;QACtB,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,yMAAA,CAAA,YAAS,CAAC,KAAK;IAChD;IACA,OAAO,SAAS,WAAW,EAAE;QACzB,MAAM,SAAS,KAAK,CAAC,SAAS,KAAK,CAAC,IAAI,EAAE;YAAC;SAAY;QACvD,YAAY,CAAC,IAAI,OAAO,CAAC,CAAC,YAAY,CAAC;QACvC,YAAY,CAAC,IAAI,OAAO,CAAC,CAAC,YAAY,CAAC;QACvC,OAAO;IACX;AACJ","ignoreList":[0]}},
    {"offset": {"line": 2875, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2881, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/qualifiers/background/shared/base/BackgroundQualifier.js"],"sourcesContent":["import { Qualifier } from \"../../../../internal/qualifier/Qualifier.js\";\n/**\n * @description Defines the visual appearance of the background.\n * @memberOf Qualifiers.Background\n * @extends {SDK.Qualifier}\n */\nclass BackgroundQualifier extends Qualifier {\n    constructor(backgroundValue) {\n        // The qualifier key for this qualifier\n        super('b');\n        // Such as color (b_red)\n        if (backgroundValue) {\n            this.addValue(backgroundValue);\n        }\n    }\n}\nexport { BackgroundQualifier };\n"],"names":[],"mappings":";;;AAAA;;AACA;;;;CAIC,GACD,MAAM,4BAA4B,yMAAA,CAAA,YAAS;IACvC,YAAY,eAAe,CAAE;QACzB,uCAAuC;QACvC,KAAK,CAAC;QACN,wBAAwB;QACxB,IAAI,iBAAiB;YACjB,IAAI,CAAC,QAAQ,CAAC;QAClB;IACJ;AACJ","ignoreList":[0]}},
    {"offset": {"line": 2901, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2907, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/qualifiers/background/shared/BlurredBackgroundAction.js"],"sourcesContent":["import { BackgroundQualifier } from \"./base/BackgroundQualifier.js\";\nexport const DEFAULT_INTENSITY = 100;\nexport const DEFAULT_BRIGHTNESS = 0;\n/**\n * @description A class for blurred background transformations.\n * @memberOf Qualifiers.Background\n * @extends {Qualifiers.Background.BackgroundQualifier}\n */\nclass BlurredBackgroundAction extends BackgroundQualifier {\n    /**\n     * @description Sets the intensity of the blur.\n     * @param {number} value - The intensity of the blur.\n     */\n    intensity(value) {\n        this.intensityLevel = value;\n        return this;\n    }\n    /**\n     * @description Sets the brightness of the background.\n     * @param {number} value - The brightness of the background.\n     */\n    brightness(value) {\n        this.brightnessLevel = value;\n        return this;\n    }\n    /**\n     * @description\n     * Stringify the qualifier\n     * BackgroundQualifiers don't have a value, but instead override the toString() function\n     */\n    toString() {\n        // b_blurred:{intensity}:{brightness}\n        const intensity = this.intensityLevel !== undefined ? `:${this.intensityLevel}` : '';\n        const brightness = this.brightnessLevel !== undefined\n            ? this.intensityLevel !== undefined\n                ? `:${this.brightnessLevel}`\n                : `:${DEFAULT_INTENSITY}:${this.brightnessLevel}`\n            : '';\n        return `b_blurred${intensity}${brightness}`;\n    }\n}\nexport default BlurredBackgroundAction;\n"],"names":[],"mappings":";;;;;AAAA;;AACO,MAAM,oBAAoB;AAC1B,MAAM,qBAAqB;AAClC;;;;CAIC,GACD,MAAM,gCAAgC,wOAAA,CAAA,sBAAmB;IACrD;;;KAGC,GACD,UAAU,KAAK,EAAE;QACb,IAAI,CAAC,cAAc,GAAG;QACtB,OAAO,IAAI;IACf;IACA;;;KAGC,GACD,WAAW,KAAK,EAAE;QACd,IAAI,CAAC,eAAe,GAAG;QACvB,OAAO,IAAI;IACf;IACA;;;;KAIC,GACD,WAAW;QACP,qCAAqC;QACrC,MAAM,YAAY,IAAI,CAAC,cAAc,KAAK,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,cAAc,EAAE,GAAG;QAClF,MAAM,aAAa,IAAI,CAAC,eAAe,KAAK,YACtC,IAAI,CAAC,cAAc,KAAK,YACpB,CAAC,CAAC,EAAE,IAAI,CAAC,eAAe,EAAE,GAC1B,CAAC,CAAC,EAAE,kBAAkB,CAAC,EAAE,IAAI,CAAC,eAAe,EAAE,GACnD;QACN,OAAO,CAAC,SAAS,EAAE,YAAY,YAAY;IAC/C;AACJ;uCACe","ignoreList":[0]}},
    {"offset": {"line": 2947, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2953, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/qualifiers/background/shared/base/BaseCommonBackground.js"],"sourcesContent":["import { prepareColor } from \"../../../../internal/utils/prepareColor.js\";\nimport { BackgroundQualifier } from \"./BackgroundQualifier.js\";\n/**\n * @description Defines the background color to use when resizing with padding.\n * @memberOf Qualifiers.Background\n * @extends {Qualifiers.Background.BackgroundQualifier}\n */\nclass BaseCommonBackground extends BackgroundQualifier {\n    constructor() {\n        super();\n        this._palette = [];\n    }\n    /**\n     * @description Selects the strongest contrasting color to use for padding.\n     * @return {this}\n     */\n    contrast() {\n        this._contrast = true;\n        return this;\n    }\n    /**\n     * @description Defines the custom colors to use when resizing using content-aware padding.\n     * @param {...string} colors One or more colors - Example: palette('green', 'red', blue')\n     * @return {this}\n     */\n    palette(...colors) {\n        this._palette = colors.map((color) => {\n            return prepareColor(color);\n        });\n        return this;\n    }\n}\nexport { BaseCommonBackground };\n"],"names":[],"mappings":";;;AAAA;AACA;;;AACA;;;;CAIC,GACD,MAAM,6BAA6B,wOAAA,CAAA,sBAAmB;IAClD,aAAc;QACV,KAAK;QACL,IAAI,CAAC,QAAQ,GAAG,EAAE;IACtB;IACA;;;KAGC,GACD,WAAW;QACP,IAAI,CAAC,SAAS,GAAG;QACjB,OAAO,IAAI;IACf;IACA;;;;KAIC,GACD,QAAQ,GAAG,MAAM,EAAE;QACf,IAAI,CAAC,QAAQ,GAAG,OAAO,GAAG,CAAC,CAAC;YACxB,OAAO,CAAA,GAAA,wMAAA,CAAA,eAAY,AAAD,EAAE;QACxB;QACA,OAAO,IAAI;IACf;AACJ","ignoreList":[0]}},
    {"offset": {"line": 2988, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2994, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/qualifiers/background/shared/auto/BackgroundAutoBorderQualifier.js"],"sourcesContent":["import { BaseCommonBackground } from \"../base/BaseCommonBackground.js\";\n/**\n * @description Automatically determines the color to use for padding, if needed when resizing an asset. Selects the\n * predominant color from the border of the image.\n * @memberOf Qualifiers.Background\n * @extends {Qualifiers.Background.BaseCommonBackground}\n */\nclass BackgroundAutoBorderQualifier extends BaseCommonBackground {\n    /**\n     * @description\n     * Stringify the qualifier\n     * BackgroundQualifiers don't have a value, but instead override the toString() function.\n     */\n    toString() {\n        return `\n    b_auto:border\n    ${this._contrast ? '_contrast' : ''}\n    ${this._palette.length ? `:palette_${this._palette.join('_')}` : ''}\n    `.replace(/\\s+/g, '');\n    }\n}\nexport { BackgroundAutoBorderQualifier };\n"],"names":[],"mappings":";;;AAAA;;AACA;;;;;CAKC,GACD,MAAM,sCAAsC,yOAAA,CAAA,uBAAoB;IAC5D;;;;KAIC,GACD,WAAW;QACP,OAAO,CAAC;;IAEZ,EAAE,IAAI,CAAC,SAAS,GAAG,cAAc,GAAG;IACpC,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG;IACpE,CAAC,CAAC,OAAO,CAAC,QAAQ;IAClB;AACJ","ignoreList":[0]}},
    {"offset": {"line": 3018, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3024, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/qualifiers/background/shared/base/BaseGradientBackground.js"],"sourcesContent":["import { BaseCommonBackground } from \"./BaseCommonBackground.js\";\n/**\n * @description Defines the gradient fade effect to use for the background when resizing with padding.\n * @memberOf Qualifiers.Background\n * @extends {Qualifiers.Background.BaseCommonBackground}\n */\nclass BaseGradientBackground extends BaseCommonBackground {\n    /**\n     *\n     * @description Sets the number of predominant colors to use (2 or 4).\n     * @param {number} num\n     * @return {this}\n     */\n    gradientColors(num) {\n        this._gradientColors = num;\n        return this;\n    }\n    /**\n     * @description Sets the direction for a background gradient fade effect.\n     * @param {Qualifiers.GradientDirection | GradientDirectionType | string} direction Use one of these functions\n     * provided by {@link Qualifiers.GradientDirection|GradientDirection}\n     * @return {this}\n     */\n    gradientDirection(direction) {\n        this._gradientDirection = direction;\n        return this;\n    }\n}\nexport { BaseGradientBackground };\n"],"names":[],"mappings":";;;AAAA;;AACA;;;;CAIC,GACD,MAAM,+BAA+B,yOAAA,CAAA,uBAAoB;IACrD;;;;;KAKC,GACD,eAAe,GAAG,EAAE;QAChB,IAAI,CAAC,eAAe,GAAG;QACvB,OAAO,IAAI;IACf;IACA;;;;;KAKC,GACD,kBAAkB,SAAS,EAAE;QACzB,IAAI,CAAC,kBAAkB,GAAG;QAC1B,OAAO,IAAI;IACf;AACJ","ignoreList":[0]}},
    {"offset": {"line": 3054, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3060, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/qualifiers/background/shared/gradient/BackgroundBorderGradientQualifier.js"],"sourcesContent":["import { BaseGradientBackground } from \"../base/BaseGradientBackground.js\";\n/**\n * @description Specifies that the gradient fade effect, used for the background when resizing with padding, uses the\n * predominant colors in the border pixels of the image.\n * @memberOf Qualifiers.Background\n * @extends {Qualifiers.Background.BaseGradientBackground}\n */\nclass BackgroundBorderGradientQualifier extends BaseGradientBackground {\n    /**\n     * @description\n     * Stringify the qualifier\n     * BackgroundQualifiers don't have a value, but instead override the toString() function.\n     */\n    toString() {\n        return `\n    b_auto:border_gradient\n    ${this._contrast ? '_contrast' : ''}\n    ${this._gradientColors ? `:${this._gradientColors}` : ''}\n    ${this._gradientDirection ? `:${this._gradientDirection}` : ''}\n    ${this._palette.length ? `:palette_${this._palette.join('_')}` : ''}\n    `.replace(/\\s+/g, '');\n    }\n}\nexport { BackgroundBorderGradientQualifier };\n"],"names":[],"mappings":";;;AAAA;;AACA;;;;;CAKC,GACD,MAAM,0CAA0C,2OAAA,CAAA,yBAAsB;IAClE;;;;KAIC,GACD,WAAW;QACP,OAAO,CAAC;;IAEZ,EAAE,IAAI,CAAC,SAAS,GAAG,cAAc,GAAG;IACpC,EAAE,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,eAAe,EAAE,GAAG,GAAG;IACzD,EAAE,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,kBAAkB,EAAE,GAAG,GAAG;IAC/D,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG;IACpE,CAAC,CAAC,OAAO,CAAC,QAAQ;IAClB;AACJ","ignoreList":[0]}},
    {"offset": {"line": 3086, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3092, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/qualifiers/background/shared/auto/BackgroundAutoPredominantQualifier.js"],"sourcesContent":["import { BaseCommonBackground } from \"../base/BaseCommonBackground.js\";\n/**\n * @description Automatically determines the color to use for padding, if needed when resizing an asset. Selects the\n * predominant color from the whole image.\n * @memberOf Qualifiers.Background\n * @extends {Qualifiers.Background.BaseCommonBackground}\n */\nclass BackgroundAutoPredominantQualifier extends BaseCommonBackground {\n    /**\n     * @description\n     * Stringify the qualifier\n     * BackgroundQualifiers don't have a value, but instead override the toString() function.\n     */\n    toString() {\n        return `\n    b_auto:predominant\n    ${this._contrast ? '_contrast' : ''}\n    ${this._palette.length ? `:palette_${this._palette.join('_')}` : ''}\n    `.replace(/\\s+/g, '');\n    }\n}\nexport { BackgroundAutoPredominantQualifier };\n"],"names":[],"mappings":";;;AAAA;;AACA;;;;;CAKC,GACD,MAAM,2CAA2C,yOAAA,CAAA,uBAAoB;IACjE;;;;KAIC,GACD,WAAW;QACP,OAAO,CAAC;;IAEZ,EAAE,IAAI,CAAC,SAAS,GAAG,cAAc,GAAG;IACpC,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG;IACpE,CAAC,CAAC,OAAO,CAAC,QAAQ;IAClB;AACJ","ignoreList":[0]}},
    {"offset": {"line": 3116, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3122, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/qualifiers/background/shared/gradient/BackgroundPredominantGradientQualifier.js"],"sourcesContent":["import { BaseGradientBackground } from \"../base/BaseGradientBackground.js\";\n/**\n * @description Specifies that the gradient fade effect, used for the background when resizing with padding, uses the\n * predominant colors in the whole of the image.\n * @memberOf Qualifiers.Background\n * @extends {Qualifiers.Background.BaseGradientBackground}\n */\nclass BackgroundPredominantGradientQualifier extends BaseGradientBackground {\n    /**\n     * @description\n     * Stringify the qualifier\n     * BackgroundQualifiers don't have a value, but instead override the toString() function.\n     */\n    toString() {\n        return `\n    b_auto:predominant_gradient\n    ${this._contrast ? '_contrast' : ''}\n    ${this._gradientColors ? `:${this._gradientColors}` : ''}\n    ${this._gradientDirection ? `:${this._gradientDirection}` : ''}\n    ${this._palette.length ? `:palette_${this._palette.join('_')}` : ''}\n    `.replace(/\\s+/g, '');\n    }\n}\nexport { BackgroundPredominantGradientQualifier };\n"],"names":[],"mappings":";;;AAAA;;AACA;;;;;CAKC,GACD,MAAM,+CAA+C,2OAAA,CAAA,yBAAsB;IACvE;;;;KAIC,GACD,WAAW;QACP,OAAO,CAAC;;IAEZ,EAAE,IAAI,CAAC,SAAS,GAAG,cAAc,GAAG;IACpC,EAAE,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,eAAe,EAAE,GAAG,GAAG;IACzD,EAAE,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,kBAAkB,EAAE,GAAG,GAAG;IAC/D,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG;IACpE,CAAC,CAAC,OAAO,CAAC,QAAQ;IAClB;AACJ","ignoreList":[0]}},
    {"offset": {"line": 3148, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3154, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/internal/utils/encodePromptComponents.js"],"sourcesContent":["export const encodePromptComponent = (prompt) => composeStringOperations(encodeURIComponent, replaceMissingChars, decodeSpaces)(prompt);\nconst charsMissingFromUrlEncode = /[!'()*~_.-]/g;\nconst missingCharsMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '*': '%2A',\n    '~': '%7E',\n    _: '%5F',\n    '.': '%2E',\n    '-': '%2D',\n};\nconst replaceMissingChars = (str) => {\n    return str.replace(charsMissingFromUrlEncode, (match) => { var _a; return (_a = missingCharsMap[match]) !== null && _a !== void 0 ? _a : match; });\n};\nconst decodeSpaces = (str) => str.replace(/%20/g, ' ');\nconst composeStringOperations = (...fns) => (arg) => fns.reduce((acc, fn) => fn(acc), arg);\n"],"names":[],"mappings":";;;AAAO,MAAM,wBAAwB,CAAC,SAAW,wBAAwB,oBAAoB,qBAAqB,cAAc;AAChI,MAAM,4BAA4B;AAClC,MAAM,kBAAkB;IACpB,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,GAAG;IACH,KAAK;IACL,KAAK;AACT;AACA,MAAM,sBAAsB,CAAC;IACzB,OAAO,IAAI,OAAO,CAAC,2BAA2B,CAAC;QAAY,IAAI;QAAI,OAAO,CAAC,KAAK,eAAe,CAAC,MAAM,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK;IAAO;AACpJ;AACA,MAAM,eAAe,CAAC,MAAQ,IAAI,OAAO,CAAC,QAAQ;AAClD,MAAM,0BAA0B,CAAC,GAAG,MAAQ,CAAC,MAAQ,IAAI,MAAM,CAAC,CAAC,KAAK,KAAO,GAAG,MAAM","ignoreList":[0]}},
    {"offset": {"line": 3178, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3184, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/qualifiers/background/shared/BackgroundGenerativeFillQualifier.js"],"sourcesContent":["import { encodePromptComponent } from \"../../../internal/utils/encodePromptComponents.js\";\nimport { BackgroundQualifier } from \"./base/BackgroundQualifier.js\";\n/**\n * @description Automatically fills the padded area using generative AI to extend the image seamlessly.\n * Optionally include a prompt to guide the image generation.\n * @memberOf Qualifiers.Background\n */\nclass BackgroundGenerativeFillQualifier extends BackgroundQualifier {\n    constructor() {\n        super(\"gen_fill\");\n        this._backgroundType = 'generativeFill';\n    }\n    prompt(prompt) {\n        try {\n            this._prompt = decodeURIComponent(prompt);\n        }\n        catch (_a) {\n            this._prompt = prompt;\n        }\n        return this;\n    }\n    getPrompt() {\n        return this._prompt;\n    }\n    getBackgroundType() {\n        return this._backgroundType;\n    }\n    /**\n     * @description\n     * Override the toString() function to explicitly stringify the qualifier.\n     */\n    toString() {\n        return `b_gen_fill${this._prompt ? `:prompt_${encodePromptComponent(this._prompt)}` : ''}`;\n    }\n}\nexport { BackgroundGenerativeFillQualifier };\n"],"names":[],"mappings":";;;AAAA;AACA;;;AACA;;;;CAIC,GACD,MAAM,0CAA0C,wOAAA,CAAA,sBAAmB;IAC/D,aAAc;QACV,KAAK,CAAC;QACN,IAAI,CAAC,eAAe,GAAG;IAC3B;IACA,OAAO,MAAM,EAAE;QACX,IAAI;YACA,IAAI,CAAC,OAAO,GAAG,mBAAmB;QACtC,EACA,OAAO,IAAI;YACP,IAAI,CAAC,OAAO,GAAG;QACnB;QACA,OAAO,IAAI;IACf;IACA,YAAY;QACR,OAAO,IAAI,CAAC,OAAO;IACvB;IACA,oBAAoB;QAChB,OAAO,IAAI,CAAC,eAAe;IAC/B;IACA;;;KAGC,GACD,WAAW;QACP,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,GAAG,CAAC,QAAQ,EAAE,CAAA,GAAA,kNAAA,CAAA,wBAAqB,AAAD,EAAE,IAAI,CAAC,OAAO,GAAG,GAAG,IAAI;IAC9F;AACJ","ignoreList":[0]}},
    {"offset": {"line": 3222, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3228, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/internal/models/createBackgroundModel.js"],"sourcesContent":["import BlurredBackgroundAction from \"../../qualifiers/background/shared/BlurredBackgroundAction.js\";\nimport { BackgroundAutoBorderQualifier } from \"../../qualifiers/background/shared/auto/BackgroundAutoBorderQualifier.js\";\nimport { BackgroundBorderGradientQualifier } from \"../../qualifiers/background/shared/gradient/BackgroundBorderGradientQualifier.js\";\nimport { BackgroundPredominantGradientQualifier } from \"../../qualifiers/background/shared/gradient/BackgroundPredominantGradientQualifier.js\";\nimport { BackgroundAutoPredominantQualifier } from \"../../qualifiers/background/shared/auto/BackgroundAutoPredominantQualifier.js\";\nimport { BackgroundGenerativeFillQualifier } from \"../../qualifiers/background/shared/BackgroundGenerativeFillQualifier.js\";\n/**\n * Get the value of given background\n * @param background\n */\nfunction getBackgroundValue(background) {\n    return `${background}`.replace('b_', '');\n}\n/**\n * Create an IAutoBackgroundModel from given background\n */\nfunction createAutoBackgroundModel() {\n    return { backgroundType: 'auto' };\n}\n/**\n * Create an IBlurredBackgroundModel from given background\n * @param background\n */\nfunction createBlurredBackgroundModel(background) {\n    const { intensityLevel, brightnessLevel } = background;\n    const result = {\n        backgroundType: 'blurred'\n    };\n    if (intensityLevel || intensityLevel === 0) {\n        result.intensity = intensityLevel;\n    }\n    if (brightnessLevel || brightnessLevel === 0) {\n        result.brightness = brightnessLevel;\n    }\n    return result;\n}\n/**\n * Create an IContrastPaletteBackgroundModel from given background\n * @param background\n */\nfunction createContrastPaletteBackgroundModel(background) {\n    const contrast = background._contrast;\n    const palette = background._palette;\n    const result = {\n        backgroundType: ''\n    };\n    if (contrast) {\n        result.contrast = true;\n    }\n    if (palette) {\n        result.palette = palette;\n    }\n    return result;\n}\n/**\n * Create an IBorderBackgroundModel from given background\n * @param background\n */\nfunction createBorderBackgroundModel(background) {\n    return Object.assign(Object.assign({}, createContrastPaletteBackgroundModel(background)), { backgroundType: 'border' });\n}\n/**\n * Create an IBaseGradientBackgroundModel from given background\n * @param background\n */\nfunction createBaseGradientBackgroundModel(background) {\n    const gradientColors = background._gradientColors;\n    const gradientDirection = `${background._gradientDirection}`;\n    const result = createContrastPaletteBackgroundModel(background);\n    if (gradientColors) {\n        result.gradientColors = gradientColors;\n    }\n    if (gradientDirection) {\n        result.gradientDirection = gradientDirection;\n    }\n    return result;\n}\n/**\n * Create an IBorderGradientBackgroundModel from given background\n * @param background\n */\nfunction createBorderGradientBackgroundModel(background) {\n    return Object.assign(Object.assign({}, createBaseGradientBackgroundModel(background)), { backgroundType: 'borderGradient' });\n}\n/**\n * Create an IColorBackgroundModel from given background\n * @param background\n */\nfunction createColorBackgroundModel(background) {\n    return {\n        backgroundType: 'color',\n        color: getBackgroundValue(background)\n    };\n}\n/**\n * Create an IPredominantBackgroundModel from given background\n * @param background\n */\nfunction createPredominantBackgroundModel(background) {\n    return Object.assign(Object.assign({}, createContrastPaletteBackgroundModel(background)), { backgroundType: 'predominant' });\n}\n/**\n * Create an IPredominantGradientBackgroundModel from given background\n * @param background\n */\nfunction createPredominantGradientBackgroundModel(background) {\n    return Object.assign(Object.assign({}, createBaseGradientBackgroundModel(background)), { backgroundType: 'predominantGradient' });\n}\n/**\n * Create an IGenerativeFillBackgroundModel from given background\n * @param urlValue\n */\nfunction createGenerativeFillBackgroundModel(background) {\n    return Object.assign({ backgroundType: background.getBackgroundType() }, (background.getPrompt() ? { prompt: background.getPrompt() } : {}));\n}\n/**\n * Create an IBackgroundModel from given background\n * @param background\n */\nfunction createBackgroundModel(background) {\n    if (getBackgroundValue(background) === 'auto') {\n        return createAutoBackgroundModel();\n    }\n    if (background instanceof BlurredBackgroundAction) {\n        return createBlurredBackgroundModel(background);\n    }\n    if (background instanceof BackgroundAutoBorderQualifier) {\n        return createBorderBackgroundModel(background);\n    }\n    if (background instanceof BackgroundBorderGradientQualifier) {\n        return createBorderGradientBackgroundModel(background);\n    }\n    if (background instanceof BackgroundAutoPredominantQualifier) {\n        return createPredominantBackgroundModel(background);\n    }\n    if (background instanceof BackgroundPredominantGradientQualifier) {\n        return createPredominantGradientBackgroundModel(background);\n    }\n    if (background instanceof BackgroundGenerativeFillQualifier) {\n        return createGenerativeFillBackgroundModel(background);\n    }\n    return createColorBackgroundModel(background);\n}\nexport { createBackgroundModel };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3383, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3389, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/qualifiers/background.js"],"sourcesContent":["import { prepareColor } from \"../internal/utils/prepareColor.js\";\nimport { BackgroundAutoBorderQualifier } from \"./background/shared/auto/BackgroundAutoBorderQualifier.js\";\nimport { BackgroundBorderGradientQualifier } from \"./background/shared/gradient/BackgroundBorderGradientQualifier.js\";\nimport { BackgroundAutoPredominantQualifier } from \"./background/shared/auto/BackgroundAutoPredominantQualifier.js\";\nimport { BackgroundPredominantGradientQualifier } from \"./background/shared/gradient/BackgroundPredominantGradientQualifier.js\";\nimport BlurredBackgroundAction from \"./background/shared/BlurredBackgroundAction.js\";\nimport { BackgroundQualifier } from \"./background/shared/base/BackgroundQualifier.js\";\nimport { BackgroundGenerativeFillQualifier } from \"./background/shared/BackgroundGenerativeFillQualifier.js\";\n/**\n * @description Defines the background color to use instead of transparent background areas or when resizing with padding.\n *\n * <b>Learn more:</b> {@link https://cloudinary.com/documentation/effects_and_artistic_enhancements#setting_background_color|Setting background for images} | {@link https://cloudinary.com/documentation/video_effects_and_enhancements#background_color|Setting background for videos}\n *\n * @namespace Background\n * @memberOf Qualifiers\n */\n/**\n * @summary qualifier\n * @description Selects the predominant color while taking only the image border pixels into account.\n * @memberOf Qualifiers.Background\n * @return {BackgroundAutoBorderQualifier}\n */\nfunction border() {\n    return new BackgroundAutoBorderQualifier();\n}\n/**\n * @summary qualifier\n * @description Automatically determines the color to use for padding, if needed when resizing an asset.\n *\n * <b>Learn more:</b> {@link https://cloudinary.com/documentation/effects_and_artistic_enhancements#content_aware_padding|Content-aware padding}\n * @memberOf Qualifiers.Background\n * @return {Qualifiers.Background.BackgroundQualifier}\n */\nfunction auto() {\n    return new BackgroundQualifier('auto');\n}\n/**\n * @summary qualifier\n * @description Applies a padding gradient fade effect using the predominant colors in the border of the image.\n * @memberOf Qualifiers.Background\n * @return {BackgroundBorderGradientQualifier}\n */\nfunction borderGradient() {\n    return new BackgroundBorderGradientQualifier();\n}\n/**\n * @summary qualifier\n * @description Applies a padding gradient fade effect using the predominant colors in the image.\n * @memberOf Qualifiers.Background\n * @return {BackgroundPredominantGradientQualifier}\n */\nfunction predominantGradient() {\n    return new BackgroundPredominantGradientQualifier();\n}\n/**\n * @summary qualifier\n * @description Selects the predominant color while taking all pixels in the image into account\n * @memberOf Qualifiers.Background\n * @return {BackgroundAutoPredominantQualifier}\n */\nfunction predominant() {\n    return new BackgroundAutoPredominantQualifier();\n}\n/**\n * @summary qualifier\n * @description Selects the predominant color while taking all pixels in the image into account.\n * @memberOf Qualifiers.Background\n * @return {Qualifiers.Background.BackgroundQualifier}\n */\nfunction color(colorStr) {\n    return new BackgroundQualifier(prepareColor(colorStr));\n}\n/**\n * @summary qualifier\n * @description Selects the predominant color while taking all pixels in the image into account.\n * @memberOf Qualifiers.Background\n * @return {BlurredBackgroundAction}\n */\nfunction blurred() {\n    return new BlurredBackgroundAction();\n}\n/**\n * @summary qualifier\n * @description A qualifier that automatically fills the padded area using generative AI to extend the image seamlessly.\n * @memberOf Qualifiers.Background\n * @return {BackgroundGenerativeFillQualifier}\n */\nfunction generativeFill() {\n    return new BackgroundGenerativeFillQualifier();\n}\nconst Background = {\n    auto,\n    border,\n    borderGradient,\n    predominantGradient,\n    predominant,\n    color,\n    blurred,\n    generativeFill\n};\nexport { auto, border, borderGradient, predominantGradient, predominant, color, blurred, generativeFill, Background };\n"],"names":[],"mappings":";;;;;;;;;;;AACA;AAKA;AAJA;AAEA;AADA;AAHA;AAKA;AAEA;;;;;;;;;AACA;;;;;;;CAOC,GACD;;;;;CAKC,GACD,SAAS;IACL,OAAO,IAAI,kPAAA,CAAA,gCAA6B;AAC5C;AACA;;;;;;;CAOC,GACD,SAAS;IACL,OAAO,IAAI,wOAAA,CAAA,sBAAmB,CAAC;AACnC;AACA;;;;;CAKC,GACD,SAAS;IACL,OAAO,IAAI,0PAAA,CAAA,oCAAiC;AAChD;AACA;;;;;CAKC,GACD,SAAS;IACL,OAAO,IAAI,+PAAA,CAAA,yCAAsC;AACrD;AACA;;;;;CAKC,GACD,SAAS;IACL,OAAO,IAAI,uPAAA,CAAA,qCAAkC;AACjD;AACA;;;;;CAKC,GACD,SAAS,MAAM,QAAQ;IACnB,OAAO,IAAI,wOAAA,CAAA,sBAAmB,CAAC,CAAA,GAAA,wMAAA,CAAA,eAAY,AAAD,EAAE;AAChD;AACA;;;;;CAKC,GACD,SAAS;IACL,OAAO,IAAI,oOAAA,CAAA,UAAuB;AACtC;AACA;;;;;CAKC,GACD,SAAS;IACL,OAAO,IAAI,8OAAA,CAAA,oCAAiC;AAChD;AACA,MAAM,aAAa;IACf;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACJ","ignoreList":[0]}},
    {"offset": {"line": 3500, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3506, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/internal/models/createBackgroundFromModel.js"],"sourcesContent":["import { Background } from \"../../qualifiers.js\";\nimport { auto, border, borderGradient, color, generativeFill, predominant, predominantGradient } from \"../../qualifiers/background.js\";\nimport { DEFAULT_BRIGHTNESS, DEFAULT_INTENSITY } from \"../../qualifiers/background/shared/BlurredBackgroundAction.js\";\n/**\n * Create BackgroundQualifier from IBlurredBackgroundModel\n * @param backgroundModel\n */\nfunction createBlurredBackground(backgroundModel) {\n    const { brightness, intensity } = backgroundModel;\n    const result = Background.blurred();\n    result.brightness(brightness !== null && brightness !== void 0 ? brightness : DEFAULT_BRIGHTNESS);\n    result.intensity(intensity !== null && intensity !== void 0 ? intensity : DEFAULT_INTENSITY);\n    return result;\n}\n/**\n * Create a gradientBackground from given model\n * @param background\n * @param backgroundModel\n */\nfunction createGradientBackground(background, backgroundModel) {\n    const { gradientColors, gradientDirection, contrast, palette } = backgroundModel;\n    if (contrast) {\n        background.contrast();\n    }\n    if (palette) {\n        background.palette(...palette);\n    }\n    if (gradientColors) {\n        background.gradientColors(+gradientColors);\n    }\n    if (gradientDirection) {\n        background.gradientDirection(gradientDirection);\n    }\n    return background;\n}\n/**\n * Crete a background with contrast and palette from given model\n * @param background\n * @param backgroundModel\n */\nfunction createContrastPaletteBackground(background, backgroundModel) {\n    const { contrast, palette } = backgroundModel;\n    if (contrast) {\n        background.contrast();\n    }\n    if (palette) {\n        background.palette(...palette);\n    }\n    return background;\n}\n/**\n * Create a Generative Fill background from given model\n * @param background\n * @param backgroundModel\n */\nfunction createGenerativeFillBackground(background, backgroundModel) {\n    const { prompt } = backgroundModel;\n    if (prompt) {\n        background.prompt(prompt);\n    }\n    return background;\n}\n/**\n * Create BackgroundQualifier from IBackgroundModel\n * @param backgroundModel\n */\nfunction createBackgroundFromModel(backgroundModel) {\n    const { backgroundType } = backgroundModel;\n    switch (backgroundType) {\n        case 'auto':\n            return auto();\n        case 'blurred':\n            return createBlurredBackground(backgroundModel);\n        case 'border':\n            return createContrastPaletteBackground(border(), backgroundModel);\n        case 'borderGradient':\n            return createGradientBackground(borderGradient(), backgroundModel);\n        case 'predominant':\n            return createContrastPaletteBackground(predominant(), backgroundModel);\n        case 'predominantGradient':\n            return createGradientBackground(predominantGradient(), backgroundModel);\n        case 'generativeFill':\n            return createGenerativeFillBackground(generativeFill(), backgroundModel);\n        default:\n            return color(backgroundModel.color);\n    }\n}\nexport { createBackgroundFromModel };\n"],"names":[],"mappings":";;;AAAA;AAEA;;;;AACA;;;CAGC,GACD,SAAS,wBAAwB,eAAe;IAC5C,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,GAAG;IAClC,MAAM,SAAS,+LAAA,CAAA,aAAU,CAAC,OAAO;IACjC,OAAO,UAAU,CAAC,eAAe,QAAQ,eAAe,KAAK,IAAI,aAAa,oOAAA,CAAA,qBAAkB;IAChG,OAAO,SAAS,CAAC,cAAc,QAAQ,cAAc,KAAK,IAAI,YAAY,oOAAA,CAAA,oBAAiB;IAC3F,OAAO;AACX;AACA;;;;CAIC,GACD,SAAS,yBAAyB,UAAU,EAAE,eAAe;IACzD,MAAM,EAAE,cAAc,EAAE,iBAAiB,EAAE,QAAQ,EAAE,OAAO,EAAE,GAAG;IACjE,IAAI,UAAU;QACV,WAAW,QAAQ;IACvB;IACA,IAAI,SAAS;QACT,WAAW,OAAO,IAAI;IAC1B;IACA,IAAI,gBAAgB;QAChB,WAAW,cAAc,CAAC,CAAC;IAC/B;IACA,IAAI,mBAAmB;QACnB,WAAW,iBAAiB,CAAC;IACjC;IACA,OAAO;AACX;AACA;;;;CAIC,GACD,SAAS,gCAAgC,UAAU,EAAE,eAAe;IAChE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,GAAG;IAC9B,IAAI,UAAU;QACV,WAAW,QAAQ;IACvB;IACA,IAAI,SAAS;QACT,WAAW,OAAO,IAAI;IAC1B;IACA,OAAO;AACX;AACA;;;;CAIC,GACD,SAAS,+BAA+B,UAAU,EAAE,eAAe;IAC/D,MAAM,EAAE,MAAM,EAAE,GAAG;IACnB,IAAI,QAAQ;QACR,WAAW,MAAM,CAAC;IACtB;IACA,OAAO;AACX;AACA;;;CAGC,GACD,SAAS,0BAA0B,eAAe;IAC9C,MAAM,EAAE,cAAc,EAAE,GAAG;IAC3B,OAAQ;QACJ,KAAK;YACD,OAAO,CAAA,GAAA,+LAAA,CAAA,OAAI,AAAD;QACd,KAAK;YACD,OAAO,wBAAwB;QACnC,KAAK;YACD,OAAO,gCAAgC,CAAA,GAAA,+LAAA,CAAA,SAAM,AAAD,KAAK;QACrD,KAAK;YACD,OAAO,yBAAyB,CAAA,GAAA,+LAAA,CAAA,iBAAc,AAAD,KAAK;QACtD,KAAK;YACD,OAAO,gCAAgC,CAAA,GAAA,+LAAA,CAAA,cAAW,AAAD,KAAK;QAC1D,KAAK;YACD,OAAO,yBAAyB,CAAA,GAAA,+LAAA,CAAA,sBAAmB,AAAD,KAAK;QAC3D,KAAK;YACD,OAAO,+BAA+B,CAAA,GAAA,+LAAA,CAAA,iBAAc,AAAD,KAAK;QAC5D;YACI,OAAO,CAAA,GAAA,+LAAA,CAAA,QAAK,AAAD,EAAE,gBAAgB,KAAK;IAC1C;AACJ","ignoreList":[0]}},
    {"offset": {"line": 3594, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3600, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/actions/resize/ResizePadAction.js"],"sourcesContent":["import { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { ResizeAdvancedAction } from \"./ResizeAdvancedAction.js\";\nimport { createBackgroundModel } from \"../../internal/models/createBackgroundModel.js\";\nimport { createBackgroundFromModel } from \"../../internal/models/createBackgroundFromModel.js\";\n/**\n * @description Defines an advanced resize with padding.\n * @extends Actions.Resize.ResizeAdvancedAction\n * @memberOf Actions.Resize\n * @see Visit {@link Actions.Resize| Resize} for examples\n */\nclass ResizePadAction extends ResizeAdvancedAction {\n    /**\n     * @description Sets the background.\n     * @param {Qualifiers.Background} backgroundQualifier Defines the background color to use instead of\n     * transparent background areas or when resizing with padding.\n     */\n    background(backgroundQualifier) {\n        this._actionModel.background = createBackgroundModel(backgroundQualifier);\n        return this.addQualifier(backgroundQualifier);\n    }\n    /**\n     * @description Horizontal position for custom-coordinates based padding.\n     * @param {number} x The x position.\n     */\n    offsetX(x) {\n        this._actionModel.x = x;\n        return this.addQualifier(new Qualifier('x', x));\n    }\n    /**\n     * @description Vertical position for custom-coordinates based padding\n     * @param {number} y The y position.\n     */\n    offsetY(y) {\n        this._actionModel.y = y;\n        return this.addQualifier(new Qualifier('y', y));\n    }\n    static fromJson(actionModel) {\n        const result = super.fromJson.apply(this, [actionModel]);\n        actionModel.background && result.background(createBackgroundFromModel(actionModel.background));\n        actionModel.x && result.offsetX(actionModel.x);\n        actionModel.y && result.offsetY(actionModel.y);\n        actionModel.zoom && result.zoom(actionModel.zoom);\n        return result;\n    }\n}\nexport { ResizePadAction };\n"],"names":[],"mappings":";;;AAEA;AAFA;AAGA;AAFA;;;;;AAGA;;;;;CAKC,GACD,MAAM,wBAAwB,gNAAA,CAAA,uBAAoB;IAC9C;;;;KAIC,GACD,WAAW,mBAAmB,EAAE;QAC5B,IAAI,CAAC,YAAY,CAAC,UAAU,GAAG,CAAA,GAAA,kNAAA,CAAA,wBAAqB,AAAD,EAAE;QACrD,OAAO,IAAI,CAAC,YAAY,CAAC;IAC7B;IACA;;;KAGC,GACD,QAAQ,CAAC,EAAE;QACP,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG;QACtB,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,yMAAA,CAAA,YAAS,CAAC,KAAK;IAChD;IACA;;;KAGC,GACD,QAAQ,CAAC,EAAE;QACP,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG;QACtB,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,yMAAA,CAAA,YAAS,CAAC,KAAK;IAChD;IACA,OAAO,SAAS,WAAW,EAAE;QACzB,MAAM,SAAS,KAAK,CAAC,SAAS,KAAK,CAAC,IAAI,EAAE;YAAC;SAAY;QACvD,YAAY,UAAU,IAAI,OAAO,UAAU,CAAC,CAAA,GAAA,sNAAA,CAAA,4BAAyB,AAAD,EAAE,YAAY,UAAU;QAC5F,YAAY,CAAC,IAAI,OAAO,OAAO,CAAC,YAAY,CAAC;QAC7C,YAAY,CAAC,IAAI,OAAO,OAAO,CAAC,YAAY,CAAC;QAC7C,YAAY,IAAI,IAAI,OAAO,IAAI,CAAC,YAAY,IAAI;QAChD,OAAO;IACX;AACJ","ignoreList":[0]}},
    {"offset": {"line": 3651, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3657, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/actions/resize/ResizeLimitFillAction.js"],"sourcesContent":["import { ResizeFillAction } from \"./ResizeFillAction.js\";\n/**\n * @description Defines how to crop-limit-fill an asset\n * @extends Actions.Resize.ResizeFillAction\n * @memberOf Actions.Resize\n * @see Visit {@link Actions.Resize| Resize} for examples\n */\nclass ResizeLimitFillAction extends ResizeFillAction {\n}\nexport { ResizeLimitFillAction };\n"],"names":[],"mappings":";;;AAAA;;AACA;;;;;CAKC,GACD,MAAM,8BAA8B,4MAAA,CAAA,mBAAgB;AACpD","ignoreList":[0]}},
    {"offset": {"line": 3670, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3676, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/actions/resize/ResizeLimitFitAction.js"],"sourcesContent":["import { ResizeSimpleAction } from \"./ResizeSimpleAction.js\";\n/**\n * @description Defines a limit fitting resize action.\n * @extends Actions.Resize.ResizeSimpleAction\n * @memberOf Actions.Resize\n * @see Visit {@link Actions.Resize| Resize} for examples\n */\nclass ResizeLimitFitAction extends ResizeSimpleAction {\n}\nexport { ResizeLimitFitAction };\n"],"names":[],"mappings":";;;AAAA;;AACA;;;;;CAKC,GACD,MAAM,6BAA6B,8MAAA,CAAA,qBAAkB;AACrD","ignoreList":[0]}},
    {"offset": {"line": 3689, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3695, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/actions/resize/ResizeMinimumPadAction.js"],"sourcesContent":["import { ResizePadAction } from \"./ResizePadAction.js\";\n/**\n * @description Defines an advanced resize with minimum padding.\n * @extends Actions.Resize.ResizePadAction\n * @memberOf Actions.Resize\n * @see Visit {@link Actions.Resize| Resize} for examples\n */\nclass ResizeMinimumPadAction extends ResizePadAction {\n}\nexport { ResizeMinimumPadAction };\n"],"names":[],"mappings":";;;AAAA;;AACA;;;;;CAKC,GACD,MAAM,+BAA+B,2MAAA,CAAA,kBAAe;AACpD","ignoreList":[0]}},
    {"offset": {"line": 3708, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3714, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/actions/resize/ThumbnailAction.js"],"sourcesContent":["import { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { ResizeAdvancedAction } from \"./ResizeAdvancedAction.js\";\n/**\n * @description Defines a thumbnail resize action.\n * @extends Actions.Resize.ResizeAdvancedAction\n * @memberOf Actions.Resize\n * @see Visit {@link Actions.Resize| Resize} for examples\n */\nclass ThumbResizeAction extends ResizeAdvancedAction {\n    /**\n     * @description Controls how much of the original image surrounding the face to keep when using either the 'crop' or 'thumb' cropping modes with face detection.\n     * @param {number | string} z The zoom factor. (Default: 1.0)\n     */\n    zoom(z) {\n        this._actionModel.zoom = z;\n        return this.addQualifier(new Qualifier('z', z));\n    }\n    static fromJson(actionModel) {\n        const result = super.fromJson.apply(this, [actionModel]);\n        actionModel.zoom && result.zoom(actionModel.zoom);\n        return result;\n    }\n}\nexport { ThumbResizeAction };\n"],"names":[],"mappings":";;;AAAA;AACA;;;AACA;;;;;CAKC,GACD,MAAM,0BAA0B,gNAAA,CAAA,uBAAoB;IAChD;;;KAGC,GACD,KAAK,CAAC,EAAE;QACJ,IAAI,CAAC,YAAY,CAAC,IAAI,GAAG;QACzB,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,yMAAA,CAAA,YAAS,CAAC,KAAK;IAChD;IACA,OAAO,SAAS,WAAW,EAAE;QACzB,MAAM,SAAS,KAAK,CAAC,SAAS,KAAK,CAAC,IAAI,EAAE;YAAC;SAAY;QACvD,YAAY,IAAI,IAAI,OAAO,IAAI,CAAC,YAAY,IAAI;QAChD,OAAO;IACX;AACJ","ignoreList":[0]}},
    {"offset": {"line": 3743, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3749, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/actions/resize/ResizeLimitPadAction.js"],"sourcesContent":["import { ResizePadAction } from \"./ResizePadAction.js\";\n/**\n * @description Defines an advanced resize with limit padding.\n * @extends Actions.Resize.ResizePadAction\n * @memberOf Actions.Resize\n * @see Visit {@link Actions.Resize| Resize} for examples\n */\nclass ResizeLimitPadAction extends ResizePadAction {\n}\nexport { ResizeLimitPadAction };\n"],"names":[],"mappings":";;;AAAA;;AACA;;;;;CAKC,GACD,MAAM,6BAA6B,2MAAA,CAAA,kBAAe;AAClD","ignoreList":[0]}},
    {"offset": {"line": 3762, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3768, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/actions/resize/ResizeAutoPadAction.js"],"sourcesContent":["import { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { createBackgroundModel } from \"../../internal/models/createBackgroundModel.js\";\nimport { createBackgroundFromModel } from \"../../internal/models/createBackgroundFromModel.js\";\nimport { ResizeSimpleAction } from \"./ResizeSimpleAction.js\";\n/**\n * @description Tries to prevent a \"bad crop\" by first attempting to use the auto cropping mode, but adding some padding if the algorithm determines that more of the original image needs to be included in the final image.\n * @extends Actions.Resize.autoPad\n * @memberOf Actions.Resize\n * @see Visit {@link Actions.Resize| Resize} for examples\n */\nclass ResizeAutoPadAction extends ResizeSimpleAction {\n    constructor(cropType, cropWidth, cropHeight) {\n        super(cropType, cropWidth, cropHeight);\n        this.addQualifier(new Qualifier('g', 'auto'));\n    }\n    /**\n     * @description Sets the background.\n     * @param {Qualifiers.Background} backgroundQualifier Defines the background color to use instead of\n     * transparent background areas or when resizing with padding.\n     */\n    background(backgroundQualifier) {\n        this._actionModel.background = createBackgroundModel(backgroundQualifier);\n        return this.addQualifier(backgroundQualifier);\n    }\n    gravity(gravity) {\n        // Only `auto` gravity is allowed (and required) for `c_auto_pad` and it's already added automatically in the constructor.\n        // Although, this method is needed to exist because it is being shown in autogenerated SDK code snippet.\n        return this;\n    }\n    static fromJson(actionModel) {\n        const result = super.fromJson.apply(this, [actionModel]);\n        actionModel.background && result.background(createBackgroundFromModel(actionModel.background));\n        return result;\n    }\n}\nexport { ResizeAutoPadAction };\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;AACA;;;;;CAKC,GACD,MAAM,4BAA4B,8MAAA,CAAA,qBAAkB;IAChD,YAAY,QAAQ,EAAE,SAAS,EAAE,UAAU,CAAE;QACzC,KAAK,CAAC,UAAU,WAAW;QAC3B,IAAI,CAAC,YAAY,CAAC,IAAI,yMAAA,CAAA,YAAS,CAAC,KAAK;IACzC;IACA;;;;KAIC,GACD,WAAW,mBAAmB,EAAE;QAC5B,IAAI,CAAC,YAAY,CAAC,UAAU,GAAG,CAAA,GAAA,kNAAA,CAAA,wBAAqB,AAAD,EAAE;QACrD,OAAO,IAAI,CAAC,YAAY,CAAC;IAC7B;IACA,QAAQ,OAAO,EAAE;QACb,0HAA0H;QAC1H,wGAAwG;QACxG,OAAO,IAAI;IACf;IACA,OAAO,SAAS,WAAW,EAAE;QACzB,MAAM,SAAS,KAAK,CAAC,SAAS,KAAK,CAAC,IAAI,EAAE;YAAC;SAAY;QACvD,YAAY,UAAU,IAAI,OAAO,UAAU,CAAC,CAAA,GAAA,sNAAA,CAAA,4BAAyB,AAAD,EAAE,YAAY,UAAU;QAC5F,OAAO;IACX;AACJ","ignoreList":[0]}},
    {"offset": {"line": 3811, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3817, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/%40cloudinary/transformation-builder-sdk/actions/resize.js"],"sourcesContent":["/**\n * @description Determines how to crop, scale, and/or zoom the delivered asset according to the requested dimensions.\n * @memberOf Actions\n * @namespace Resize\n * @see Learn more about Gravity and Focus {@link Qualifiers.Gravity| here }\n * @example\n * <caption> <h4>Scaling an image</h4> </caption>\n * import {Cloudinary} from \"@cloudinary/url-gen\";\n * import {scale, fit, pad, crop} from '@cloudinary/url-gen/actions/resize';\n *\n * const yourCldInstance = new Cloudinary({cloud:{cloudName:'demo'}});\n * const image = yourCldInstance.image('woman');\n *\n * image.resize( scale(100, 100) );\n * // All resize actions have a similar interface.\n * // image.resize( fit(100, 100)) );\n * // image.resize( pad(100, 100)) );\n * // image.resize( crop(100, 100)) );\n * // However, Some actions have additional arguments exposed as builder methods.\n * // See the documentation for each method for more information\n *\n *\n * // Alternative syntax, using builder methods\n * image.resize(\n *  scale()\n *    .width(100)\n *    .height(100)\n * );\n * image.toString()\n *\n * @example\n * <caption> <h4>Cropping with automatic focus(Gravity)</h4> </caption>\n * import {Cloudinary} from \"@cloudinary/url-gen\";\n *\n * const yourCldInstance = new Cloudinary({cloud:{cloudName:'demo'}});\n * const image = yourCldInstance.image('woman');\n *\n * import {scale} from '@cloudinary/url-gen/actions/resize';\n * import {autoGravity} from '@cloudinary/url-gen/qualifiers/gravity';\n *\n * image.resize( crop(100, 100).gravity(autoGravity()) );\n *\n * // Alternative syntax, using builder methods\n * image.resize(\n *  scale()\n *    .width(100)\n *    .height(100)\n *    .gravity(autoGravity())\n * );\n * image.toString()\n */\nimport { ResizePadAction } from \"./resize/ResizePadAction.js\";\nimport { ResizeSimpleAction } from \"./resize/ResizeSimpleAction.js\";\nimport { ResizeScaleAction } from \"./resize/ResizeScaleAction.js\";\nimport { ThumbResizeAction } from \"./resize/ThumbnailAction.js\";\nimport { ResizeCropAction } from \"./resize/ResizeCropAction.js\";\nimport { ResizeFillAction } from \"./resize/ResizeFillAction.js\";\nimport { ResizeLimitFitAction } from \"./resize/ResizeLimitFitAction.js\";\nimport { ResizeLimitFillAction } from \"./resize/ResizeLimitFillAction.js\";\nimport { ResizeLimitPadAction } from \"./resize/ResizeLimitPadAction.js\";\nimport { ResizeMinimumPadAction } from \"./resize/ResizeMinimumPadAction.js\";\nimport { ResizeAdvancedAction } from \"./resize/ResizeAdvancedAction.js\";\nimport { ResizeAutoPadAction } from \"./resize/ResizeAutoPadAction.js\";\n/**\n * @summary action\n * @description\n * Changes the size of the image exactly to the given width and height without necessarily retaining the original aspect ratio:<br/>\n * all original image parts are visible but might be stretched or shrunk.\n * @memberOf Actions.Resize\n * @param {number|string} width The required width of a transformed asset.\n * @param {number|string} height The required height of a transformed asset.\n * @return {Actions.Resize.ScaleAction}\n */\nfunction scale(width, height) {\n    return new ResizeScaleAction('scale', width, height);\n}\n/**\n * @summary action\n * @description\n * Scales your image based on automatically calculated areas of interest within each specific photo.\n *\n * For details, see the Imagga Crop and Scale {@link  https://cloudinary.com/documentation/imagga_crop_and_scale_addon#smartly_scale_images|add-on documentation}.\n * @memberOf Actions.Resize\n * @param {number|string} width The required width of a transformed asset.\n * @param {number|string} height The required height of a transformed asset.\n * @return {Actions.Resize.ResizeSimpleAction}\n */\nfunction imaggaScale(width, height) {\n    return new ResizeSimpleAction('imagga_scale', width, height);\n}\n/**\n * @summary action\n * @description\n * Crops your image based on automatically calculated areas of interest within each specific photo.\n *\n * For details, see the Imagga Crop and Scale {@link  https://cloudinary.com/documentation/imagga_crop_and_scale_addon#smartly_crop_images|add-on documentation}.\n * @memberOf Actions.Resize\n * @param {number|string} width The required width of a transformed asset.\n * @param {number|string} height The required height of a transformed asset.\n * @return {Actions.Resize.ResizeSimpleAction}\n */\nfunction imaggaCrop(width, height) {\n    return new ResizeSimpleAction('imagga_crop', width, height);\n}\n/**\n * @summary action\n * @description Extracts a region of the given width and height out of the original image.\n * @memberOf Actions.Resize\n * @param {number|string} width The required width of a transformed asset.\n * @param {number|string} height The required height of a transformed asset.\n * @return {Actions.Resize.ResizeCropAction}\n */\nfunction crop(width, height) {\n    return new ResizeCropAction('crop', width, height);\n}\n/**\n * @summary action\n * @description\n * Creates an image with the exact given width and height without distorting the image.<br/>\n * This option first scales up or down as much as needed to at least fill both of the given dimensions.<br/><br/>\n * If the requested aspect ratio is different than the original, cropping will occur on the dimension that exceeds the requested size after scaling.\n * @memberOf Actions.Resize\n * @param {number|string} width The required width of a transformed asset.\n * @param {number|string} height The required height of a transformed asset.\n * @return {Actions.Resize.ResizeFillAction}\n */\nfunction fill(width, height) {\n    return new ResizeFillAction('fill', width, height);\n}\n/**\n * @summary action\n * @description\n * The image is resized so that it takes up as much space as possible within a bounding box defined by the given width and height parameters.</br>\n * The original aspect ratio is retained and all of the original image is visible.\n * @memberOf Actions.Resize\n * @param {number|string} width The required width of a transformed asset.\n * @param {number|string} height The required height of a transformed asset.\n * @return {Actions.Resize.ResizeSimpleAction}\n */\nfunction fit(width, height) {\n    return new ResizeSimpleAction('fit', width, height);\n}\n/**\n * @summary action\n * @description\n * Resizes the asset to fill the given width and height while retaining the original aspect ratio.\n *\n * If the proportions of the original asset do not match the given width and height, padding is added to the asset\n * to reach the required size.\n * @memberOf Actions.Resize\n * @param {number|string} width The required width of a transformed asset.\n * @param {number|string} height The required height of a transformed asset.\n * @return {Actions.Resize.ResizePadAction}\n */\nfunction pad(width, height) {\n    return new ResizePadAction('pad', width, height);\n}\n/**\n * @summary action\n * @description\n * Creates an asset with the exact given width and height without distorting the asset, but only if the original\n * asset is larger than the specified resolution limits.\n *\n * The asset is scaled down to fill the given width and height without distorting the asset, and then the dimension\n * that exceeds the request is cropped. If the original dimensions are both smaller than the requested size, it is\n * not resized at all.\n *\n * @memberOf Actions.Resize\n * @param {number|string} width The required width of a transformed asset.\n * @param {number|string} height The required height of a transformed asset.\n * @return {Actions.Resize.ResizeLimitFillAction}\n */\nfunction limitFill(width, height) {\n    return new ResizeLimitFillAction('lfill', width, height);\n}\n/**\n * @summary action\n * @description\n * Resizes the asset so that it takes up as much space as possible within a bounding box defined by the given\n * width and height parameters, but only if the original asset is larger than the given limit (width and height).\n *\n * The asset is scaled down, the original aspect ratio is retained and all of the original asset is visible.\n * @memberOf Actions.Resize\n * @param {number|string} width The required width of a transformed asset.\n * @param {number|string} height The required height of a transformed asset.\n * @return {Actions.Resize.ResizeSimpleAction}\n */\nfunction limitFit(width, height) {\n    return new ResizeLimitFitAction('limit', width, height);\n}\n/**\n * @summary action\n * @description\n * Resizes the asset to fill the given width and height while retaining the original aspect ratio, but only if the\n * original asset is smaller than the given minimum (width and height).\n *\n * The asset is scaled up.  If the proportions of the original asset do not match the given width and height,\n * padding is added to the asset to reach the required size.\n * @memberOf Actions.Resize\n * @param {number|string} width The required width of a transformed asset.\n * @param {number|string} height The required height of a transformed asset.\n * @return {Actions.Resize.ResizePadAction}\n */\nfunction minimumPad(width, height) {\n    return new ResizeMinimumPadAction('mpad', width, height);\n}\n/**\n * @summary action\n * @description\n * Resizes the asset so that it takes up as much space as possible within a bounding box defined by the given\n * width and height parameters, but only if the original asset is smaller than the given minimum (width and height).\n *\n * The asset is scaled up, the original aspect ratio is retained and all of the original asset is visible.\n * @memberOf Actions.Resize\n * @param {number|string} width The required width of a transformed asset.\n * @param {number|string} height The required height of a transformed asset.\n * @return {Actions.Resize.ResizeSimpleAction}\n */\nfunction minimumFit(width, height) {\n    return new ResizeSimpleAction('mfit', width, height);\n}\n/**\n * @summary action\n * @memberOf Actions.Resize\n * @description\n * Tries to prevent a \"bad crop\" by first attempting to use the fill mode, but adding padding if it is determined\n * that more of the original image needs to be included in the final image.\n *\n * Especially useful if the aspect ratio of the delivered image is considerably different from the original's\n * aspect ratio.\n *\n * Only supported in conjunction with Automatic cropping.\n *\n * @param {number|string} width The required width of a transformed asset.\n * @param {number|string} height The required height of a transformed asset.\n * @return {Actions.Resize.ResizePadAction}\n */\nfunction fillPad(width, height) {\n    return new ResizePadAction('fill_pad', width, height);\n}\n/**\n * @summary action\n * @description\n * The thumb cropping mode is specifically used for creating image thumbnails from either face or custom coordinates,</br>\n * and must always be accompanied by the gravity parameter set to one of the face detection or custom values.\n * @memberOf Actions.Resize\n * @param {number|string} width The required width of a transformed asset.\n * @param {number|string} height The required height of a transformed asset.\n * @return {Actions.Resize.ThumbResizeAction}\n */\nfunction thumbnail(width, height) {\n    return new ThumbResizeAction('thumb', width, height);\n}\n/**\n * @summary action\n * @description\n * Automatically determines the best crop based on the gravity and specified dimensions.\n * @memberOf Actions.Resize\n * @param {number|string} width The required width of a transformed asset.\n * @param {number|string} height The required height of a transformed asset.\n * @return {Actions.Resize.ThumbResizeAction}\n */\nfunction auto(width, height) {\n    return new ResizeAdvancedAction('auto', width, height);\n}\n/**\n * @summary action\n * @description\n * Resizes the asset to fill the given width and height while retaining the original aspect ratio, but only if the\n * original asset is larger than the given limit (width and height).\n *\n * The asset is scaled down.  If the proportions of the original asset do not match the given width and height,\n * padding is added to the asset to reach the required size.\n *\n * @memberOf Actions.Resize\n * @param {number|string} width The required width of a transformed asset.\n * @param {number|string} height The required height of a transformed asset.\n * @return {Actions.Resize.ResizePadAction}\n */\nfunction limitPad(width, height) {\n    return new ResizeLimitPadAction('lpad', width, height);\n}\n/**\n * @summary action\n * @description\n * Tries to prevent a \"bad crop\" by first attempting to use the auto cropping mode, but adding some padding\n * if the algorithm determines that more of the original image needs to be included in the final image.\n *\n * @memberOf Actions.Resize\n * @param {number|string} width The required width of a transformed asset.\n * @param {number|string} height The required height of a transformed asset.\n * @return {Actions.Resize.ResizeAutoPadAction}\n */\nfunction autoPad(width, height) {\n    return new ResizeAutoPadAction('auto_pad', width, height);\n}\nconst Resize = {\n    imaggaScale,\n    imaggaCrop,\n    crop,\n    fill,\n    scale,\n    minimumPad,\n    fit,\n    pad,\n    limitFit,\n    thumbnail,\n    limitFill,\n    minimumFit,\n    limitPad,\n    fillPad,\n    auto,\n    autoPad\n};\nexport { Resize, imaggaScale, imaggaCrop, crop, fill, scale, minimumPad, fit, pad, limitFit, thumbnail, limitFill, minimumFit, limitPad, fillPad, auto, autoPad };\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAkDC;;;;;;;;;;;;;;;;;;;AAGD;AADA;AAGA;AACA;AALA;AAOA;AADA;AAGA;AANA;AAOA;AAFA;AAGA;;;;;;;;;;;;;AACA;;;;;;;;;CASC,GACD,SAAS,MAAM,KAAK,EAAE,MAAM;IACxB,OAAO,IAAI,6MAAA,CAAA,oBAAiB,CAAC,SAAS,OAAO;AACjD;AACA;;;;;;;;;;CAUC,GACD,SAAS,YAAY,KAAK,EAAE,MAAM;IAC9B,OAAO,IAAI,8MAAA,CAAA,qBAAkB,CAAC,gBAAgB,OAAO;AACzD;AACA;;;;;;;;;;CAUC,GACD,SAAS,WAAW,KAAK,EAAE,MAAM;IAC7B,OAAO,IAAI,8MAAA,CAAA,qBAAkB,CAAC,eAAe,OAAO;AACxD;AACA;;;;;;;CAOC,GACD,SAAS,KAAK,KAAK,EAAE,MAAM;IACvB,OAAO,IAAI,4MAAA,CAAA,mBAAgB,CAAC,QAAQ,OAAO;AAC/C;AACA;;;;;;;;;;CAUC,GACD,SAAS,KAAK,KAAK,EAAE,MAAM;IACvB,OAAO,IAAI,4MAAA,CAAA,mBAAgB,CAAC,QAAQ,OAAO;AAC/C;AACA;;;;;;;;;CASC,GACD,SAAS,IAAI,KAAK,EAAE,MAAM;IACtB,OAAO,IAAI,8MAAA,CAAA,qBAAkB,CAAC,OAAO,OAAO;AAChD;AACA;;;;;;;;;;;CAWC,GACD,SAAS,IAAI,KAAK,EAAE,MAAM;IACtB,OAAO,IAAI,2MAAA,CAAA,kBAAe,CAAC,OAAO,OAAO;AAC7C;AACA;;;;;;;;;;;;;;CAcC,GACD,SAAS,UAAU,KAAK,EAAE,MAAM;IAC5B,OAAO,IAAI,iNAAA,CAAA,wBAAqB,CAAC,SAAS,OAAO;AACrD;AACA;;;;;;;;;;;CAWC,GACD,SAAS,SAAS,KAAK,EAAE,MAAM;IAC3B,OAAO,IAAI,gNAAA,CAAA,uBAAoB,CAAC,SAAS,OAAO;AACpD;AACA;;;;;;;;;;;;CAYC,GACD,SAAS,WAAW,KAAK,EAAE,MAAM;IAC7B,OAAO,IAAI,kNAAA,CAAA,yBAAsB,CAAC,QAAQ,OAAO;AACrD;AACA;;;;;;;;;;;CAWC,GACD,SAAS,WAAW,KAAK,EAAE,MAAM;IAC7B,OAAO,IAAI,8MAAA,CAAA,qBAAkB,CAAC,QAAQ,OAAO;AACjD;AACA;;;;;;;;;;;;;;;CAeC,GACD,SAAS,QAAQ,KAAK,EAAE,MAAM;IAC1B,OAAO,IAAI,2MAAA,CAAA,kBAAe,CAAC,YAAY,OAAO;AAClD;AACA;;;;;;;;;CASC,GACD,SAAS,UAAU,KAAK,EAAE,MAAM;IAC5B,OAAO,IAAI,2MAAA,CAAA,oBAAiB,CAAC,SAAS,OAAO;AACjD;AACA;;;;;;;;CAQC,GACD,SAAS,KAAK,KAAK,EAAE,MAAM;IACvB,OAAO,IAAI,gNAAA,CAAA,uBAAoB,CAAC,QAAQ,OAAO;AACnD;AACA;;;;;;;;;;;;;CAaC,GACD,SAAS,SAAS,KAAK,EAAE,MAAM;IAC3B,OAAO,IAAI,gNAAA,CAAA,uBAAoB,CAAC,QAAQ,OAAO;AACnD;AACA;;;;;;;;;;CAUC,GACD,SAAS,QAAQ,KAAK,EAAE,MAAM;IAC1B,OAAO,IAAI,+MAAA,CAAA,sBAAmB,CAAC,YAAY,OAAO;AACtD;AACA,MAAM,SAAS;IACX;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACJ","ignoreList":[0]}},
    {"offset": {"line": 4146, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}