{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/src/app/firebase.js"],"sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB6LYkEpOGtaAsEr3biosqd_QC3YSud9cw\",\r\n  authDomain: \"fwrp-11fc3.firebaseapp.com\",\r\n  projectId: \"fwrp-11fc3\",\r\n  storageBucket: \"fwrp-11fc3.firebasestorage.app\",\r\n  messagingSenderId: \"707085459051\",\r\n  appId: \"1:707085459051:web:94dfad19e1e5b22b479b2e\",\r\n  measurementId: \"G-K083R1WZWC\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nexport const auth = getAuth(app);\r\nexport const db = getFirestore(app);\r\n"],"names":[],"mappings":"AAAA,uDAAuD;;;;;AACvD;AACA;AACA;AAFA;AACA;AACA;;;;AACA,4DAA4D;AAC5D,iEAAiE;AAEjE,wCAAwC;AACxC,mEAAmE;AACnE,MAAM,iBAAiB;IACrB,QAAQ;IACR,YAAY;IACZ,WAAW;IACX,eAAe;IACf,mBAAmB;IACnB,OAAO;IACP,eAAe;AACjB;AAEA,sBAAsB;AACtB,MAAM,MAAM,CAAA,GAAA,sLAAA,CAAA,gBAAa,AAAD,EAAE;AACnB,MAAM,OAAO,CAAA,GAAA,2OAAA,CAAA,UAAO,AAAD,EAAE;AACrB,MAAM,KAAK,CAAA,GAAA,mKAAA,CAAA,eAAY,AAAD,EAAE"}},
    {"offset": {"line": 206, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 242, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/src/app/api/users/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\r\nimport { db } from \"@/app/firebase\";\r\nimport { collection, getDocs, doc, updateDoc, deleteDoc } from \"firebase/firestore\";\r\n// --- ADMIN SDK SETUP ---\r\nimport { initializeApp, getApps, cert, applicationDefault } from \"firebase-admin/app\";\r\nimport { getAuth } from \"firebase-admin/auth\";\r\nimport { getFirestore as getAdminFirestore } from \"firebase-admin/firestore\";\r\n\r\n// Use environment variables for production (Vercel, Netlify, etc.)\r\nconst isProd = process.env.NODE_ENV === \"production\";\r\n\r\n// Only initialize once\r\nif (getApps().length === 0) {\r\n  if (isProd) {\r\n    initializeApp({\r\n      credential: cert({\r\n        projectId: process.env.FIREBASE_PROJECT_ID,\r\n        clientEmail: process.env.FIREBASE_CLIENT_EMAIL,\r\n        privateKey: process.env.FIREBASE_PRIVATE_KEY?.replace(/\\\\n/g, '\\n'),\r\n      }),\r\n    });\r\n  } else {\r\n    initializeApp({\r\n      credential: applicationDefault(),\r\n      projectId: \"fwrp-11fc3\", // Explicitly set your Firebase project ID\r\n    });\r\n  }\r\n}\r\nconst adminDb = getAdminFirestore();\r\n\r\n// GET all users (for reference, not used for edit/delete)\r\nexport async function GET() {\r\n  const usersCol = collection(db, \"users\");\r\n  const snapshot = await getDocs(usersCol);\r\n  const users = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n  return NextResponse.json(users);\r\n}\r\n\r\n// PATCH to update a user\r\nexport async function PATCH(req: NextRequest) {\r\n  try {\r\n    const { id, ...data } = await req.json();\r\n    if (!id) return NextResponse.json({ error: \"User ID required\" }, { status: 400 });\r\n    const userRef = doc(db, \"users\", id);\r\n    await updateDoc(userRef, data);\r\n    return NextResponse.json({ success: true });\r\n  } catch (e) {\r\n    const errorMsg = e instanceof Error ? e.message : String(e);\r\n    return NextResponse.json({ error: errorMsg }, { status: 500 });\r\n  }\r\n}\r\n\r\n// DELETE to remove a user (admin only, with ID token check)\r\nexport async function DELETE(req: NextRequest) {\r\n  try {\r\n    const { id } = await req.json();\r\n    if (!id) return NextResponse.json({ error: \"User ID required\" }, { status: 400 });\r\n    const authHeader = req.headers.get(\"authorization\");\r\n    if (!authHeader || !authHeader.startsWith(\"Bearer \")) {\r\n      return NextResponse.json({ error: \"Unauthorized\" }, { status: 401 });\r\n    }\r\n    const idToken = authHeader.split(\"Bearer \")[1];\r\n    const decoded = await getAuth().verifyIdToken(idToken);\r\n    // Check admin status\r\n    const adminDoc = await adminDb.collection(\"users\").doc(decoded.uid).get();\r\n    const adminData = adminDoc.data?.();\r\n    if (!adminDoc.exists || !adminData || !adminData.isAdmin) {\r\n      return NextResponse.json({ error: \"Forbidden: Admins only\" }, { status: 403 });\r\n    }\r\n    // Proceed to delete\r\n    await adminDb.collection(\"users\").doc(id).delete();\r\n    return NextResponse.json({ success: true });\r\n  } catch (e) {\r\n    const errorMsg = e instanceof Error ? e.message : String(e);\r\n    return NextResponse.json({ error: errorMsg }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 354, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}