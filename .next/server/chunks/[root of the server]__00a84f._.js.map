{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/src/app/api/users/%5Bid%5D/route.ts"],"sourcesContent":["// API route to get user public info (including phone) by userId\r\nimport { NextRequest, NextResponse } from \"next/server\";\r\nimport { getFirestore } from \"firebase-admin/firestore\";\r\nimport { getApps, initializeApp, cert } from \"firebase-admin/app\";\r\n\r\nif (!getApps().length) {\r\n  initializeApp({\r\n    credential: cert({\r\n      projectId: process.env.FIREBASE_PROJECT_ID,\r\n      clientEmail: process.env.FIREBASE_CLIENT_EMAIL,\r\n      privateKey: process.env.FIREBASE_PRIVATE_KEY?.replace(/\\\\n/g, \"\\n\"),\r\n    }),\r\n  });\r\n}\r\n\r\nconst db = getFirestore();\r\n\r\nexport async function GET(\r\n  req: NextRequest,\r\n  context: { params: Promise<{ id: string }> }\r\n) {\r\n  try {\r\n    const { id: userId } = await context.params;\r\n    if (!userId) return NextResponse.json({ error: \"User ID required\" }, { status: 400 });\r\n    const userDoc = await db.collection(\"users\").doc(userId).get();\r\n    if (!userDoc.exists) return NextResponse.json({ error: \"User not found\" }, { status: 404 });\r\n    const { name, phone, avatar } = userDoc.data() || {};\r\n    return NextResponse.json({ name, phone, avatar });\r\n  } catch {\r\n    return NextResponse.json({ error: \"Server error\" }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":"AAAA,gEAAgE;;;;AAChE;AACA;AACA;;;;;;;;;AAEA,IAAI,CAAC,CAAA,GAAA,gJAAA,CAAA,UAAO,AAAD,IAAI,MAAM,EAAE;IACrB,CAAA,GAAA,gJAAA,CAAA,gBAAa,AAAD,EAAE;QACZ,YAAY,CAAA,GAAA,gJAAA,CAAA,OAAI,AAAD,EAAE;YACf,WAAW,QAAQ,GAAG,CAAC,mBAAmB;YAC1C,aAAa,QAAQ,GAAG,CAAC,qBAAqB;YAC9C,YAAY,QAAQ,GAAG,CAAC,oBAAoB,EAAE,QAAQ,QAAQ;QAChE;IACF;AACF;AAEA,MAAM,KAAK,CAAA,GAAA,4JAAA,CAAA,eAAY,AAAD;AAEf,eAAe,IACpB,GAAgB,EAChB,OAA4C;IAE5C,IAAI;QACF,MAAM,EAAE,IAAI,MAAM,EAAE,GAAG,MAAM,QAAQ,MAAM;QAC3C,IAAI,CAAC,QAAQ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAmB,GAAG;YAAE,QAAQ;QAAI;QACnF,MAAM,UAAU,MAAM,GAAG,UAAU,CAAC,SAAS,GAAG,CAAC,QAAQ,GAAG;QAC5D,IAAI,CAAC,QAAQ,MAAM,EAAE,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAiB,GAAG;YAAE,QAAQ;QAAI;QACzF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,QAAQ,IAAI,MAAM,CAAC;QACnD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE;YAAM;YAAO;QAAO;IACjD,EAAE,OAAM;QACN,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAe,GAAG;YAAE,QAAQ;QAAI;IACpE;AACF"}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}