{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/src/app/api/users/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\r\nimport { adminDb, adminAuth } from \"@/app/firebaseAdmin\";\r\n\r\n// GET all users (for reference, not used for edit/delete)\r\nexport async function GET() {\r\n  const usersCol = adminDb.collection(\"users\");\r\n  const snapshot = await usersCol.get();\r\n  const users = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n  return NextResponse.json(users);\r\n}\r\n\r\n// PATCH to update a user\r\nexport async function PATCH(req: NextRequest) {\r\n  try {\r\n    const { id, ...data } = await req.json();\r\n    if (!id) return NextResponse.json({ error: \"User ID required\" }, { status: 400 });\r\n    const userRef = adminDb.collection(\"users\").doc(id);\r\n    await userRef.update(data);\r\n    return NextResponse.json({ success: true });\r\n  } catch (e) {\r\n    const errorMsg = e instanceof Error ? e.message : String(e);\r\n    return NextResponse.json({ error: errorMsg }, { status: 500 });\r\n  }\r\n}\r\n\r\n// DELETE to remove a user (admin only, with ID token check)\r\nexport async function DELETE(req: NextRequest) {\r\n  try {\r\n    const { id } = await req.json();\r\n    if (!id) return NextResponse.json({ error: \"User ID required\" }, { status: 400 });\r\n\r\n    const authHeader = req.headers.get(\"authorization\");\r\n    if (!authHeader || !authHeader.startsWith(\"Bearer \")) {\r\n      return NextResponse.json({ error: \"Unauthorized\" }, { status: 401 });\r\n    }\r\n    const idToken = authHeader.split(\"Bearer \")[1];\r\n\r\n    // Verify token\r\n    const decodedToken = await adminAuth.verifyIdToken(idToken);\r\n\r\n    // Check admin\r\n    const adminDoc = await adminDb.collection(\"users\").doc(decodedToken.uid).get();\r\n    if (!adminDoc.exists || !adminDoc.data().isAdmin) {\r\n      return NextResponse.json({ error: \"Forbidden\" }, { status: 403 });\r\n    }\r\n\r\n    // Delete user document from Firestore\r\n    await adminDb.collection(\"users\").doc(id).delete();\r\n\r\n    // Delete user from Firebase Authentication\r\n    await adminAuth.deleteUser(id);\r\n\r\n    return NextResponse.json({ success: true });\r\n  } catch (e) {\r\n    // Log the actual error for debugging\r\n    console.error(\"DELETE /api/users error:\", e);\r\n    return NextResponse.json({ error: e instanceof Error ? e.message : String(e) }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;AAGO,eAAe;IACpB,MAAM,WAAW,6HAAA,CAAA,UAAO,CAAC,UAAU,CAAC;IACpC,MAAM,WAAW,MAAM,SAAS,GAAG;IACnC,MAAM,QAAQ,SAAS,IAAI,CAAC,GAAG,CAAC,CAAC,MAAQ,CAAC;YAAE,IAAI,IAAI,EAAE;YAAE,GAAG,IAAI,IAAI,EAAE;QAAC,CAAC;IACvE,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;AAC3B;AAGO,eAAe,MAAM,GAAgB;IAC1C,IAAI;QACF,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM,GAAG,MAAM,IAAI,IAAI;QACtC,IAAI,CAAC,IAAI,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAmB,GAAG;YAAE,QAAQ;QAAI;QAC/E,MAAM,UAAU,6HAAA,CAAA,UAAO,CAAC,UAAU,CAAC,SAAS,GAAG,CAAC;QAChD,MAAM,QAAQ,MAAM,CAAC;QACrB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAK;IAC3C,EAAE,OAAO,GAAG;QACV,MAAM,WAAW,aAAa,QAAQ,EAAE,OAAO,GAAG,OAAO;QACzD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAS,GAAG;YAAE,QAAQ;QAAI;IAC9D;AACF;AAGO,eAAe,OAAO,GAAgB;IAC3C,IAAI;QACF,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM,IAAI,IAAI;QAC7B,IAAI,CAAC,IAAI,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAmB,GAAG;YAAE,QAAQ;QAAI;QAE/E,MAAM,aAAa,IAAI,OAAO,CAAC,GAAG,CAAC;QACnC,IAAI,CAAC,cAAc,CAAC,WAAW,UAAU,CAAC,YAAY;YACpD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAe,GAAG;gBAAE,QAAQ;YAAI;QACpE;QACA,MAAM,UAAU,WAAW,KAAK,CAAC,UAAU,CAAC,EAAE;QAE9C,eAAe;QACf,MAAM,eAAe,MAAM,6HAAA,CAAA,YAAS,CAAC,aAAa,CAAC;QAEnD,cAAc;QACd,MAAM,WAAW,MAAM,6HAAA,CAAA,UAAO,CAAC,UAAU,CAAC,SAAS,GAAG,CAAC,aAAa,GAAG,EAAE,GAAG;QAC5E,IAAI,CAAC,SAAS,MAAM,IAAI,CAAC,SAAS,IAAI,GAAG,OAAO,EAAE;YAChD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAY,GAAG;gBAAE,QAAQ;YAAI;QACjE;QAEA,sCAAsC;QACtC,MAAM,6HAAA,CAAA,UAAO,CAAC,UAAU,CAAC,SAAS,GAAG,CAAC,IAAI,MAAM;QAEhD,2CAA2C;QAC3C,MAAM,6HAAA,CAAA,YAAS,CAAC,UAAU,CAAC;QAE3B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAK;IAC3C,EAAE,OAAO,GAAG;QACV,qCAAqC;QACrC,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO,aAAa,QAAQ,EAAE,OAAO,GAAG,OAAO;QAAG,GAAG;YAAE,QAAQ;QAAI;IAChG;AACF"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FWRP/node_modules/next/dist/src/build/templates/app-route.ts"],"sourcesContent":["import {\n  AppRouteRouteModule,\n  type AppRouteRouteModuleOptions,\n} from '../../server/route-modules/app-route/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\nimport { patchFetch as _patchFetch } from '../../server/lib/patch-fetch'\n\nimport * as userland from 'VAR_USERLAND'\n\n// These are injected by the loader afterwards. This is injected as a variable\n// instead of a replacement because this could also be `undefined` instead of\n// an empty string.\ndeclare const nextConfigOutput: AppRouteRouteModuleOptions['nextConfigOutput']\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\n// INJECT:nextConfigOutput\n\nconst routeModule = new AppRouteRouteModule({\n  definition: {\n    kind: RouteKind.APP_ROUTE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    filename: 'VAR_DEFINITION_FILENAME',\n    bundlePath: 'VAR_DEFINITION_BUNDLE_PATH',\n  },\n  resolvedPagePath: 'VAR_RESOLVED_PAGE_PATH',\n  nextConfigOutput,\n  userland,\n})\n\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule\n\nfunction patchFetch() {\n  return _patchFetch({\n    workAsyncStorage,\n    workUnitAsyncStorage,\n  })\n}\n\nexport {\n  routeModule,\n  workAsyncStorage,\n  workUnitAsyncStorage,\n  serverHooks,\n  patchFetch,\n}\n"],"names":["AppRouteRouteModule","RouteKind","patchFetch","_patchFetch","userland","routeModule","definition","kind","APP_ROUTE","page","pathname","filename","bundlePath","resolvedPagePath","nextConfigOutput","workAsyncStorage","workUnitAsyncStorage","serverHooks"],"mappings":";;;;;;;AAAA,SACEA,mBAAmB,QAEd,uDAAsD;AAC7D,SAASC,SAAS,QAAQ,0BAAyB;AACnD,SAASC,cAAcC,WAAW,QAAQ,+BAA8B;AAExE,YAAYC,cAAc,eAAc;;;;;;;;;AAOxC,2EAA2E;AAC3E,UAAU;AACV,MAAA,mBAAA,CAA0B;AAE1B,MAAMC,cAAc,8MAAIL,sBAAAA,CAAoB;IAC1CM,YAAY;QACVC,MAAMN,6KAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACVC,UAAU;QACVC,YAAY;IACd;IACAC,kBAAkB;IAClBC;cACAV;AACF;AAEA,2EAA2E;AAC3E,2EAA2E;AAC3E,mCAAmC;AACnC,MAAM,EAAEW,gBAAgB,EAAEC,oBAAoB,EAAEC,WAAW,EAAE,GAAGZ;AAEhE,SAASH;IACP,oLAAOC,aAAAA,EAAY;QACjBY;QACAC;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}